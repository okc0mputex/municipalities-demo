{"version":3,"file":"sandbox-ChAzL-i-.js","sources":["../../../node_modules/native-file-system-adapter/src/adapters/sandbox.js"],"sourcesContent":["/* global Blob, DOMException */\n\nimport { errors } from '../util.js'\n\nconst { DISALLOWED } = errors\n\nclass Sink {\n  /**\n   * @param {FileWriter} writer\n   * @param {FileEntry} fileEntry\n   */\n  constructor (writer, fileEntry) {\n    this.writer = writer\n    this.fileEntry = fileEntry\n  }\n\n  /**\n   * @param {BlobPart | Object} chunk\n   */\n  async write (chunk) {\n    if (typeof chunk === 'object') {\n      if (chunk.type === 'write') {\n        if (Number.isInteger(chunk.position) && chunk.position >= 0) {\n          this.writer.seek(chunk.position)\n          if (this.writer.position !== chunk.position) {\n            await new Promise((resolve, reject) => {\n              this.writer.onwriteend = resolve\n              this.writer.onerror = reject\n              this.writer.truncate(chunk.position)\n            })\n            this.writer.seek(chunk.position)\n          }\n        }\n        if (!('data' in chunk)) {\n          throw new DOMException('Failed to execute \\'write\\' on \\'UnderlyingSinkBase\\': Invalid params passed. write requires a data argument', 'SyntaxError')\n        }\n        chunk = chunk.data\n      } else if (chunk.type === 'seek') {\n        if (Number.isInteger(chunk.position) && chunk.position >= 0) {\n          this.writer.seek(chunk.position)\n          if (this.writer.position !== chunk.position) {\n            throw new DOMException('seeking position failed', 'InvalidStateError')\n          }\n          return\n        } else {\n          throw new DOMException('Failed to execute \\'write\\' on \\'UnderlyingSinkBase\\': Invalid params passed. seek requires a position argument', 'SyntaxError')\n        }\n      } else if (chunk.type === 'truncate') {\n        return new Promise(resolve => {\n          if (Number.isInteger(chunk.size) && chunk.size >= 0) {\n            this.writer.onwriteend = evt => resolve()\n            this.writer.truncate(chunk.size)\n          } else {\n            throw new DOMException('Failed to execute \\'write\\' on \\'UnderlyingSinkBase\\': Invalid params passed. truncate requires a size argument', 'SyntaxError')\n          }\n        })\n      }\n    }\n    await new Promise((resolve, reject) => {\n      this.writer.onwriteend = resolve\n      this.writer.onerror = reject\n      this.writer.write(new Blob([chunk]))\n    })\n  }\n\n  close () {\n    return new Promise(this.fileEntry.file.bind(this.fileEntry))\n  }\n}\n\nexport class FileHandle {\n  /** @param {FileEntry} file */\n  constructor (file, writable = true) {\n    this.file = file\n    this.kind = 'file'\n    this.writable = writable\n    this.readable = true\n  }\n\n  get name () {\n    return this.file.name\n  }\n\n  /**\n   * @param {{ file: { toURL: () => string; }; }} other\n   */\n  isSameEntry (other) {\n    return this.file.toURL() === other.file.toURL()\n  }\n\n  /** @return {Promise<File>} */\n  getFile () {\n    return new Promise(this.file.file.bind(this.file))\n  }\n\n  /** @return {Promise<Sink>} */\n  createWritable (opts) {\n    if (!this.writable) throw new DOMException(...DISALLOWED)\n\n    return new Promise((resolve, reject) =>\n      this.file.createWriter(fileWriter => {\n        if (opts.keepExistingData === false) {\n          fileWriter.onwriteend = evt => resolve(new Sink(fileWriter, this.file))\n          fileWriter.truncate(0)\n        } else {\n          resolve(new Sink(fileWriter, this.file))\n        }\n      }, reject)\n    )\n  }\n}\n\nexport class FolderHandle {\n  /** @param {DirectoryEntry} dir */\n  constructor (dir, writable = true) {\n    this.dir = dir\n    this.writable = writable\n    this.readable = true\n    this.kind = 'directory'\n    this.name = dir.name\n  }\n\n  /** @param {FolderHandle} other */\n  isSameEntry (other) {\n    return this.dir.fullPath === other.dir.fullPath\n  }\n\n  /** @returns {AsyncGenerator<[string, FileHandle | FolderHandle]>} */\n  async * entries () {\n    const reader = this.dir.createReader()\n    const entries = await new Promise(reader.readEntries.bind(reader))\n    for (const x of entries) {\n      yield [x.name, x.isFile ? new FileHandle(x, this.writable) : new FolderHandle(x, this.writable)]\n    }\n  }\n\n  /**\n   * @param {string} name\n   * @param {{ create: boolean; }} opts\n   * @returns {Promise<FolderHandle>}\n   */\n  getDirectoryHandle (name, opts) {\n    return new Promise((resolve, reject) => {\n      this.dir.getDirectory(name, opts, dir => {\n        resolve(new FolderHandle(dir))\n      }, reject)\n    })\n  }\n\n  /**\n   * @param {string} name\n   * @param {{ create: boolean; }} opts\n   * @returns {Promise<FileHandle>}\n   */\n  getFileHandle (name, opts) {\n    return new Promise((resolve, reject) =>\n      this.dir.getFile(name, opts, file => resolve(new FileHandle(file)), reject)\n    )\n  }\n\n  /**\n   * @param {string} name\n   * @param {{ recursive: boolean; }} opts\n   */\n  async removeEntry (name, opts) {\n    /** @type {Error|FolderHandle|FileHandle} */\n    const entry = await this.getDirectoryHandle(name, { create: false }).catch(err =>\n      err.name === 'TypeMismatchError' ? this.getFileHandle(name, { create: false }) : err\n    )\n\n    if (entry instanceof Error) throw entry\n\n    return new Promise((resolve, reject) => {\n      if (entry instanceof FolderHandle) {\n        opts.recursive\n          ? entry.dir.removeRecursively(() => resolve(), reject)\n          : entry.dir.remove(() => resolve(), reject)\n      } else if (entry.file) {\n        entry.file.remove(() => resolve(), reject)\n      }\n    })\n  }\n}\n\nexport default (opts = {}) => new Promise((resolve, reject) =>\n  window.webkitRequestFileSystem(\n    opts._persistent, 0,\n    e => resolve(new FolderHandle(e.root)),\n    reject\n  )\n)\n"],"names":["DISALLOWED","errors","Sink","writer","fileEntry","chunk","resolve","reject","evt","FileHandle","file","writable","other","opts","fileWriter","FolderHandle","dir","reader","entries","x","name","entry","err","sandbox","e"],"mappings":"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","x_google_ignoreList":[0]}