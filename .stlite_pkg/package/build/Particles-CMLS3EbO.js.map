{"version":3,"file":"Particles-CMLS3EbO.js","sources":["../../../streamlit/frontend/lib/src/components/core/Portal/RenderInPortalIfExists.tsx","../../../streamlit/frontend/lib/src/components/elements/Particles/styled-components.ts","../../../streamlit/frontend/lib/src/components/elements/Particles/Particles.tsx"],"sourcesContent":["/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2025)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { FC, PropsWithChildren, useContext } from \"react\"\n\nimport { createPortal } from \"react-dom\"\n\nimport { PortalContext } from \"./PortalContext\"\n\nexport const RenderInPortalIfExists: FC<PropsWithChildren> = ({\n  children,\n}) => {\n  const portalElement = useContext(PortalContext)?.()\n\n  return portalElement ? (\n    createPortal(children, portalElement)\n  ) : (\n    <>{children}</>\n  )\n}\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2025)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport styled from \"@emotion/styled\"\n\nexport const StyledParticles = styled.div({\n  \"@media print\": {\n    display: \"none\",\n  },\n})\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2025)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { FC, memo, useContext, useMemo } from \"react\"\n\nimport range from \"lodash/range\"\n\nimport { LibContext } from \"~lib/components/core/LibContext\"\n\nimport { StyledParticles } from \"./styled-components\"\nexport interface ParticleProps {\n  particleType: number\n  resourceCrossOriginMode?: undefined | \"anonymous\" | \"use-credentials\"\n}\n\nexport interface Props {\n  className: string\n  scriptRunId: string\n  numParticles: number\n  numParticleTypes: number\n  ParticleComponent: FC<React.PropsWithChildren<ParticleProps>>\n}\n\nconst Particles: FC<React.PropsWithChildren<Props>> = ({\n  className,\n  scriptRunId,\n  numParticles,\n  numParticleTypes,\n  ParticleComponent,\n}: Props) => {\n  const { libConfig } = useContext(LibContext)\n\n  // Prepare a random selection of particle types:\n  const particleTypes = useMemo(\n    () =>\n      range(numParticles).map(() =>\n        Math.floor(Math.random() * numParticleTypes)\n      ),\n    [numParticles, numParticleTypes]\n  )\n\n  return (\n    // Keys should be unique each time, so React replaces the images in the DOM and their animations\n    // actually rerun.\n    <StyledParticles className={className} data-testid={className}>\n      {particleTypes.map((particleType, i) => (\n        <ParticleComponent\n          // eslint-disable-next-line @eslint-react/no-array-index-key\n          key={scriptRunId + i}\n          particleType={particleType}\n          resourceCrossOriginMode={libConfig.resourceCrossOriginMode}\n        />\n      ))}\n    </StyledParticles>\n  )\n}\n\nexport default memo(Particles)\n"],"names":["RenderInPortalIfExists","children","portalElement","useContext","PortalContext","createPortal","StyledParticles","_styled","target","name","styles","Particles","className","scriptRunId","numParticles","numParticleTypes","ParticleComponent","libConfig","LibContext","particleTypes","useMemo","range","map","Math","floor","random","jsx","particleType","i","resourceCrossOriginMode","Particles$1","memo"],"mappings":";AAsBO,MAAMA,IAAgDA,CAAC;AAAA,EAC5DC,UAAAA;AACF,MAAM;AACJ,QAAMC,IAAgBC,aAAWC,CAAa,IAAA;AAE9C,SAAOF,IACLG,EAAAA,aAAaJ,GAAUC,CAAa,wCAEjCD,UAAAA,GAAS;AAEhB,GCdaK,IAAkBC,gBAAAA,SAAA;AAAA,EAAAC,QAAA;AAAA,CAAA,EAAA;AAAA,EAAAC,MAAA;AAAA,EAAAC,QAAA;AAAA,CAI9B,GCcKC,IAAgDA,CAAC;AAAA,EACrDC,WAAAA;AAAAA,EACAC,aAAAA;AAAAA,EACAC,cAAAA;AAAAA,EACAC,kBAAAA;AAAAA,EACAC,mBAAAA;AACK,MAAM;AACX,QAAM;AAAA,IAAEC,WAAAA;AAAAA,EAAAA,IAAcd,EAAAA,WAAWe,CAAU,GAGrCC,IAAgBC,EAAAA,QACpB,MACEC,EAAMP,CAAY,EAAEQ,IAAI,MACtBC,KAAKC,MAAMD,KAAKE,OAAAA,IAAWV,CAAgB,CAC7C,GACF,CAACD,GAAcC,CAAgB,CACjC;AAEA;AAAA;AAAA;AAAA,IAGEW,gBAAAA,EAAAA,IAACpB,KAAgB,WAAAM,GAAsB,eAAaA,GACjDO,UAAAA,EAAcG,IAAI,CAACK,GAAcC,MAChCF,gBAAAA,EAAAA;AAAAA,MAACV;AAAA,MAAA;AAAA,QAGC,cAAAW;AAAA,QACA,yBAAyBV,EAAUY;AAAAA,MAAAA;AAAAA,MAF9BhB,IAAce;AAAAA,IAAAA,CAItB,EAAA,CACH;AAAA;AAEJ,GAEAE,IAAeC,EAAAA,KAAKpB,CAAS;"}