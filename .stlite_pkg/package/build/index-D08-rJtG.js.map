{"version":3,"file":"index-D08-rJtG.js","sources":["../../../streamlit/frontend/lib/src/components/widgets/Multiselect/styled-components.ts","../../../streamlit/frontend/lib/src/components/widgets/Multiselect/Multiselect.tsx"],"sourcesContent":["/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2025)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport styled from \"@emotion/styled\"\n\nexport const StyledUISelect = styled.div(({ theme }) => ({\n  \"span[aria-disabled='true']\": {\n    background: theme.colors.fadedText05,\n  },\n}))\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2025)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { FC, memo, useCallback, useContext, useMemo } from \"react\"\n\nimport { ChevronDown } from \"baseui/icon\"\nimport {\n  type OnChangeParams,\n  type Option,\n  TYPE,\n  Select as UISelect,\n} from \"baseui/select\"\nimport without from \"lodash/without\"\n\nimport { MultiSelect as MultiSelectProto } from \"@streamlit/protobuf\"\n\nimport IsSidebarContext from \"~lib/components/core/IsSidebarContext\"\nimport { VirtualDropdown } from \"~lib/components/shared/Dropdown\"\nimport { fuzzyFilterSelectOptions } from \"~lib/components/shared/Dropdown/Selectbox\"\nimport { Placement } from \"~lib/components/shared/Tooltip\"\nimport TooltipIcon from \"~lib/components/shared/TooltipIcon\"\nimport {\n  StyledWidgetLabelHelp,\n  WidgetLabel,\n} from \"~lib/components/widgets/BaseWidget\"\nimport { StyledUISelect } from \"~lib/components/widgets/Multiselect/styled-components\"\nimport {\n  useBasicWidgetState,\n  ValueWithSource,\n} from \"~lib/hooks/useBasicWidgetState\"\nimport { useEmotionTheme } from \"~lib/hooks/useEmotionTheme\"\nimport { isMobile } from \"~lib/util/isMobile\"\nimport {\n  getSelectPlaceholder,\n  labelVisibilityProtoValueToEnum,\n} from \"~lib/util/utils\"\nimport { WidgetStateManager } from \"~lib/WidgetStateManager\"\n\nexport interface Props {\n  disabled: boolean\n  element: MultiSelectProto\n  widgetMgr: WidgetStateManager\n  fragmentId?: string\n}\n\ntype MultiselectValue = string[]\n\ninterface MultiselectOption {\n  label: string\n  value: string\n}\n\nconst getStateFromWidgetMgr = (\n  widgetMgr: WidgetStateManager,\n  element: MultiSelectProto\n): MultiselectValue | undefined => {\n  return widgetMgr.getStringArrayValue(element)\n}\n\nconst getDefaultStateFromProto = (\n  element: MultiSelectProto\n): MultiselectValue => {\n  return element.default.map(i => element.options[i]) ?? null\n}\n\nconst getCurrStateFromProto = (\n  element: MultiSelectProto\n): MultiselectValue => {\n  return element.rawValues ?? null\n}\n\nconst updateWidgetMgrState = (\n  element: MultiSelectProto,\n  widgetMgr: WidgetStateManager,\n  valueWithSource: ValueWithSource<MultiselectValue>,\n  fragmentId?: string\n): void => {\n  widgetMgr.setStringArrayValue(\n    element,\n    valueWithSource.value,\n    { fromUi: valueWithSource.fromUi },\n    fragmentId\n  )\n}\n\nconst Multiselect: FC<Props> = props => {\n  const { element, widgetMgr, fragmentId } = props\n\n  const theme = useEmotionTheme()\n  const isInSidebar = useContext(IsSidebarContext)\n  const [value, setValueWithSource] = useBasicWidgetState<\n    MultiselectValue,\n    MultiSelectProto\n  >({\n    getStateFromWidgetMgr,\n    getDefaultStateFromProto,\n    getCurrStateFromProto,\n    updateWidgetMgrState,\n    element,\n    widgetMgr,\n    fragmentId,\n  })\n\n  const overMaxSelections =\n    element.maxSelections > 0 && value.length >= element.maxSelections\n\n  const getNoResultsMsg = useMemo(() => {\n    if (element.maxSelections === 0) {\n      return \"No results\"\n    } else if (value.length === element.maxSelections) {\n      const option = element.maxSelections !== 1 ? \"options\" : \"option\"\n      return `You can only select up to ${element.maxSelections} ${option}. Remove an option first.`\n    }\n    return \"No results\"\n  }, [element.maxSelections, value.length])\n\n  const valueFromState = useMemo(() => {\n    return value.map(option => {\n      return { value: option, label: option }\n    })\n  }, [value])\n\n  const generateNewState = useCallback(\n    (data: OnChangeParams): MultiselectValue => {\n      switch (data.type) {\n        case \"remove\": {\n          return without(value, data.option?.value)\n        }\n        case \"clear\": {\n          return []\n        }\n        case \"select\": {\n          return value.concat([data.option?.value])\n        }\n        default: {\n          // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n          throw new Error(`State transition is unknown: ${data.type}`)\n        }\n      }\n    },\n    [value]\n  )\n\n  /**\n   * This is the onChange handler for the baseweb Select component.\n   * It is called whenever the user selects an option or removes an option.\n   * When the user starts to modify an option by typing in the input field and\n   * pressing backspace, a single `type=\"remove\"` event is fired with the value set\n   * to the option that is being removed. The same type of event is fired when the\n   * user removes an option by clicking the X icon.\n   *\n   * If we wanted to prevent an immediate rerun when starting to delete characters,\n   * we would need to introduce two new states, e.g. `localValue` and `aboutToDelete`,\n   * and commit that state to the backend upon an onBlur event.\n   * To keep it simple, we just accept the rerun happening for now.\n   */\n  const onChange = useCallback(\n    (params: OnChangeParams) => {\n      if (\n        element.maxSelections &&\n        params.type === \"select\" &&\n        value.length >= element.maxSelections\n      ) {\n        return\n      }\n      setValueWithSource({\n        value: generateNewState(params),\n        fromUi: true,\n      })\n    },\n    [element.maxSelections, generateNewState, setValueWithSource, value.length]\n  )\n\n  const filterOptions = useCallback(\n    (options: readonly Option[], filterValue: string): readonly Option[] => {\n      if (overMaxSelections) {\n        return []\n      }\n      // We need to manually filter for previously selected options here\n      const unselectedOptions = options.filter(\n        option => !value.includes(option.value)\n      )\n\n      return fuzzyFilterSelectOptions(\n        unselectedOptions as MultiselectOption[],\n        filterValue\n      )\n    },\n    [overMaxSelections, value]\n  )\n\n  const { options } = element\n\n  // Get placeholder and disabled state using utility function\n  const { placeholder, shouldDisable } = getSelectPlaceholder(\n    element.placeholder,\n    options,\n    element.acceptNewOptions ?? false,\n    true // isMultiSelect = true for multi-select\n  )\n\n  const disabled = props.disabled || shouldDisable\n  const selectOptions: MultiselectOption[] = options.map(\n    (option: string, index: number) => {\n      return {\n        label: option,\n        value: option,\n        // We are using an id because if multiple options are equal,\n        // we have observed weird UI glitches\n        id: `${option}_${index}`,\n      }\n    }\n  )\n\n  // Check if we have more than 10 options in the selectbox.\n  // If that's true, we show the keyboard on mobile. If not, we hide it.\n  const showKeyboardOnMobile = options.length > 10\n\n  // Calculate the max height of the selectbox based on the baseFontSize\n  // to better support advanced theming\n  const maxHeight = useMemo(() => {\n    // Option height = lineHeight (1.6 * baseFontSize) + margin/padding (14px total)\n    const optionHeight = theme.fontSizes.baseFontSize * 1.6 + 14\n    // Allow up to 4 options tall before scrolling + show small portion\n    // of the next row so its clear the user can scroll\n    const pxMaxHeight = Math.round(optionHeight * 4.25)\n    // Return value in px\n    return `${pxMaxHeight}px`\n  }, [theme.fontSizes.baseFontSize])\n\n  return (\n    <div className=\"stMultiSelect\" data-testid=\"stMultiSelect\">\n      <WidgetLabel\n        label={element.label}\n        disabled={disabled}\n        labelVisibility={labelVisibilityProtoValueToEnum(\n          element.labelVisibility?.value\n        )}\n      >\n        {element.help && (\n          <StyledWidgetLabelHelp>\n            <TooltipIcon\n              content={element.help}\n              placement={Placement.TOP_RIGHT}\n            />\n          </StyledWidgetLabelHelp>\n        )}\n      </WidgetLabel>\n      <StyledUISelect>\n        <UISelect\n          creatable={element.acceptNewOptions ?? false}\n          options={selectOptions}\n          labelKey=\"label\"\n          valueKey=\"value\"\n          aria-label={element.label}\n          placeholder={placeholder}\n          type={TYPE.select}\n          multi\n          onChange={onChange}\n          value={valueFromState}\n          disabled={disabled}\n          size={\"compact\"}\n          noResultsMsg={getNoResultsMsg}\n          filterOptions={filterOptions}\n          closeOnSelect={false}\n          ignoreCase={false}\n          overrides={{\n            Popover: {\n              props: {\n                ignoreBoundary: isInSidebar,\n                overrides: {\n                  Body: {\n                    style: () => ({\n                      marginTop: theme.spacing.px,\n                    }),\n                  },\n                },\n              },\n            },\n            SelectArrow: {\n              component: ChevronDown,\n              props: {\n                style: {\n                  cursor: \"pointer\",\n                },\n                overrides: {\n                  Svg: {\n                    style: () => ({\n                      width: theme.iconSizes.xl,\n                      height: theme.iconSizes.xl,\n                    }),\n                  },\n                },\n              },\n            },\n\n            IconsContainer: {\n              style: () => ({\n                paddingRight: theme.spacing.sm,\n              }),\n            },\n            ControlContainer: {\n              style: {\n                maxHeight: maxHeight,\n                minHeight: theme.sizes.minElementHeight,\n                // Baseweb requires long-hand props, short-hand leads to weird bugs & warnings.\n                borderLeftWidth: theme.sizes.borderWidth,\n                borderRightWidth: theme.sizes.borderWidth,\n                borderTopWidth: theme.sizes.borderWidth,\n                borderBottomWidth: theme.sizes.borderWidth,\n              },\n            },\n            Placeholder: {\n              style: () => ({\n                flex: \"inherit\",\n                color: disabled\n                  ? theme.colors.fadedText40\n                  : theme.colors.fadedText60,\n              }),\n            },\n            ValueContainer: {\n              style: () => ({\n                overflowY: \"auto\",\n                paddingLeft: theme.spacing.sm,\n                paddingTop: theme.spacing.none,\n                paddingBottom: theme.spacing.none,\n                paddingRight: theme.spacing.none,\n              }),\n            },\n            ClearIcon: {\n              props: {\n                overrides: {\n                  Svg: {\n                    style: {\n                      color: theme.colors.darkGray,\n                      // setting this width and height makes the clear-icon align with dropdown arrows of other input fields\n                      padding: theme.spacing.threeXS,\n                      height: theme.sizes.clearIconSize,\n                      width: theme.sizes.clearIconSize,\n                      cursor: \"pointer\",\n                      \":hover\": {\n                        fill: theme.colors.bodyText,\n                      },\n                    },\n                  },\n                },\n              },\n            },\n            SearchIcon: {\n              style: {\n                color: theme.colors.darkGray,\n              },\n            },\n            Tag: {\n              props: {\n                overrides: {\n                  Root: {\n                    style: {\n                      fontWeight: theme.fontWeights.normal,\n                      borderTopLeftRadius: theme.radii.md,\n                      borderTopRightRadius: theme.radii.md,\n                      borderBottomRightRadius: theme.radii.md,\n                      borderBottomLeftRadius: theme.radii.md,\n                      fontSize: theme.fontSizes.md,\n                      paddingLeft: theme.spacing.sm,\n                      marginLeft: theme.spacing.none,\n                      marginRight: theme.spacing.sm,\n                      // The tag height is derived from the minElementHeight\n                      // minus a top and bottom padding (2 * spacing.xs)\n                      // to nicely fit into the input field.\n                      height: `calc(${theme.sizes.minElementHeight} - 2 * ${theme.spacing.xs})`,\n                      maxWidth: `calc(100% - ${theme.spacing.lg})`,\n                      // Using !important because the alternative would be\n                      // uglier: we'd have to put it under a selector like\n                      // \"&[role=\"button\"]:not(:disabled)\" in order to win in\n                      // the order of the precedence.\n                      cursor: \"default !important\",\n                    },\n                  },\n                  Action: {\n                    style: {\n                      paddingLeft: 0,\n                    },\n                  },\n                  ActionIcon: {\n                    props: {\n                      overrides: {\n                        Svg: {\n                          style: {\n                            // The action icon should be around 0.625% of the parent font size.\n                            width: \"0.625em\",\n                            height: \"0.625em\",\n                          },\n                        },\n                      },\n                    },\n                  },\n                },\n              },\n            },\n            MultiValue: {\n              props: {\n                overrides: {\n                  Root: {\n                    style: {\n                      fontSize: theme.fontSizes.sm,\n                    },\n                  },\n                },\n              },\n            },\n            Input: {\n              props: {\n                // Change the 'readonly' prop to hide the mobile keyboard if options < 10\n                readOnly:\n                  isMobile() && showKeyboardOnMobile === false\n                    ? \"readonly\"\n                    : null,\n              },\n            },\n            Dropdown: { component: VirtualDropdown },\n          }}\n        />\n      </StyledUISelect>\n    </div>\n  )\n}\n\nexport default memo(Multiselect)\n"],"names":["StyledUISelect","_styled","target","theme","background","colors","fadedText05","getStateFromWidgetMgr","widgetMgr","element","getStringArrayValue","getDefaultStateFromProto","default","map","i","options","getCurrStateFromProto","rawValues","updateWidgetMgrState","valueWithSource","fragmentId","setStringArrayValue","value","fromUi","Multiselect","props","useEmotionTheme","isInSidebar","useContext","IsSidebarContext","setValueWithSource","useBasicWidgetState","overMaxSelections","maxSelections","length","getNoResultsMsg","useMemo","option","valueFromState","label","generateNewState","useCallback","data","type","without","concat","Error","onChange","params","filterOptions","filterValue","unselectedOptions","filter","includes","fuzzyFilterSelectOptions","placeholder","shouldDisable","getSelectPlaceholder","acceptNewOptions","disabled","selectOptions","index","id","showKeyboardOnMobile","maxHeight","optionHeight","fontSizes","baseFontSize","Math","round","jsxs","jsx","WidgetLabel","labelVisibilityProtoValueToEnum","labelVisibility","help","StyledWidgetLabelHelp","TooltipIcon","Placement","TOP_RIGHT","UISelect","TYPE","select","Popover","ignoreBoundary","overrides","Body","style","marginTop","spacing","px","SelectArrow","component","ChevronDown","cursor","Svg","width","iconSizes","xl","height","IconsContainer","paddingRight","sm","ControlContainer","minHeight","sizes","minElementHeight","borderLeftWidth","borderWidth","borderRightWidth","borderTopWidth","borderBottomWidth","Placeholder","flex","color","fadedText40","fadedText60","ValueContainer","overflowY","paddingLeft","paddingTop","none","paddingBottom","ClearIcon","darkGray","padding","threeXS","clearIconSize","fill","bodyText","SearchIcon","Tag","Root","fontWeight","fontWeights","normal","borderTopLeftRadius","radii","md","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","fontSize","marginLeft","marginRight","xs","maxWidth","lg","Action","ActionIcon","MultiValue","Input","readOnly","isMobile","Dropdown","VirtualDropdown","Multiselect$1","memo"],"mappings":"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"}