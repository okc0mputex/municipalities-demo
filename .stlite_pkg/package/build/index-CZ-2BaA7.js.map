{"version":3,"file":"index-CZ-2BaA7.js","sources":["../../../streamlit/frontend/lib/src/components/elements/Audio/styled-components.ts","../../../streamlit/frontend/lib/src/components/elements/Audio/Audio.tsx"],"sourcesContent":["/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2025)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport styled from \"@emotion/styled\"\n\nexport const StyledAudioContainer = styled.div(() => ({\n  // Without setting lineHeight to 0, the audio element will\n  // have some extra weird space in Safari & Firefox.\n  lineHeight: 0,\n}))\n\nexport const StyledAudio = styled.audio(({ theme }) => ({\n  width: \"100%\",\n  height: theme.sizes.minElementHeight,\n  margin: 0,\n  padding: 0,\n}))\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2025)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { memo, ReactElement, useEffect, useMemo, useRef } from \"react\"\n\nimport { getLogger } from \"loglevel\"\n\nimport { Audio as AudioProto } from \"@streamlit/protobuf\"\n\nimport { useCrossOriginAttribute } from \"~lib/hooks/useCrossOriginAttribute\"\nimport { StreamlitEndpoints } from \"~lib/StreamlitEndpoints\"\nimport { WidgetStateManager as ElementStateManager } from \"~lib/WidgetStateManager\"\n\nimport { useStliteMediaObjectUrl } from \"@stlite/kernel\"\n\nimport { StyledAudio, StyledAudioContainer } from \"./styled-components\"\n\nconst LOG = getLogger(\"Audio\")\nexport interface AudioProps {\n  endpoints: StreamlitEndpoints\n  element: AudioProto\n  elementMgr: ElementStateManager\n}\n\nfunction Audio({\n  element,\n  endpoints,\n  elementMgr,\n}: Readonly<AudioProps>): ReactElement {\n  const audioRef = useRef<HTMLAudioElement>(null)\n\n  const { startTime, endTime, loop, autoplay } = element\n\n  const preventAutoplay = useMemo<boolean>(() => {\n    if (!element.id) {\n      // Elements without an ID should never autoplay\n      return true\n    }\n\n    // Recover the state in case this component got unmounted\n    // and mounted again for the same element.\n    const preventAutoplayState = elementMgr.getElementState(\n      element.id,\n      \"preventAutoplay\"\n    )\n\n    if (!preventAutoplayState) {\n      // Set the state to prevent autoplay in case there is an unmount + mount\n      // for the same element.\n      elementMgr.setElementState(element.id, \"preventAutoplay\", true)\n    }\n    return preventAutoplayState ?? false\n  }, [element.id, elementMgr])\n\n  // Handle startTime changes\n  useEffect(() => {\n    if (audioRef.current) {\n      audioRef.current.currentTime = startTime\n    }\n  }, [startTime])\n\n  useEffect(() => {\n    const audioNode = audioRef.current\n\n    const setStartTime: () => void = () => {\n      if (audioNode) {\n        // setStartTime\n        audioNode.currentTime = element.startTime\n      }\n    }\n\n    if (audioNode) {\n      audioNode.addEventListener(\"loadedmetadata\", setStartTime)\n    }\n\n    return () => {\n      if (audioNode) {\n        audioNode.removeEventListener(\"loadedmetadata\", setStartTime)\n      }\n    }\n  }, [element])\n\n  // Stop the audio at 'endTime' and handle loop\n  useEffect(() => {\n    const audioNode = audioRef.current\n    if (!audioNode) {\n      return\n    }\n\n    // Flag to avoid calling 'audioNode.pause()' multiple times\n    let stoppedByEndTime = false\n\n    const handleTimeUpdate = (): void => {\n      if (endTime > 0 && audioNode.currentTime >= endTime) {\n        if (loop) {\n          // If loop is true and we reached 'endTime', reset to 'startTime'\n          audioNode.currentTime = startTime || 0\n          // eslint-disable-next-line @typescript-eslint/no-floating-promises -- TODO: Fix this\n          audioNode.play()\n        } else if (!stoppedByEndTime) {\n          stoppedByEndTime = true\n          audioNode.pause()\n        }\n      }\n    }\n\n    if (endTime > 0) {\n      audioNode.addEventListener(\"timeupdate\", handleTimeUpdate)\n    }\n\n    return () => {\n      if (audioNode && endTime > 0) {\n        audioNode.removeEventListener(\"timeupdate\", handleTimeUpdate)\n      }\n    }\n  }, [endTime, loop, startTime])\n\n  // Handle looping the audio\n  useEffect(() => {\n    const audioNode = audioRef.current\n    if (!audioNode) {\n      return\n    }\n\n    // Loop the audio when it has ended\n    const handleAudioEnd = (): void => {\n      if (loop) {\n        audioNode.currentTime = startTime || 0 // Reset to startTime or to the start if not specified\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises -- TODO: Fix this\n        audioNode.play()\n      }\n    }\n\n    audioNode.addEventListener(\"ended\", handleAudioEnd)\n\n    return () => {\n      if (audioNode) {\n        audioNode.removeEventListener(\"ended\", handleAudioEnd)\n      }\n    }\n  }, [loop, startTime])\n\n  const rawUrl = useStliteMediaObjectUrl(element.url)\n  const crossOrigin = useCrossOriginAttribute(rawUrl)\n  const uri = endpoints.buildMediaURL(rawUrl)\n\n  const handleAudioError = (\n    e: React.SyntheticEvent<HTMLAudioElement>\n  ): void => {\n    const audioUrl = e.currentTarget.src\n    LOG.error(`Client Error: Audio source error - ${audioUrl}`)\n    endpoints.sendClientErrorToHost(\n      \"Audio\",\n      \"Audio source failed to load\",\n      \"onerror triggered\",\n      audioUrl\n    )\n  }\n\n  return (\n    <StyledAudioContainer>\n      <StyledAudio\n        className=\"stAudio\"\n        data-testid=\"stAudio\"\n        ref={audioRef}\n        controls\n        autoPlay={autoplay && !preventAutoplay}\n        src={uri}\n        onError={handleAudioError}\n        crossOrigin={crossOrigin}\n      />\n    </StyledAudioContainer>\n  )\n}\n\nexport default memo(Audio)\n"],"names":["StyledAudioContainer","_styled","target","lineHeight","StyledAudio","theme","width","height","sizes","minElementHeight","margin","padding","LOG","getLogger","Audio","element","endpoints","elementMgr","audioRef","useRef","startTime","endTime","loop","autoplay","preventAutoplay","useMemo","id","preventAutoplayState","getElementState","setElementState","useEffect","current","currentTime","audioNode","setStartTime","addEventListener","removeEventListener","stoppedByEndTime","handleTimeUpdate","play","pause","handleAudioEnd","rawUrl","useStliteMediaObjectUrl","url","crossOrigin","useCrossOriginAttribute","uri","buildMediaURL","handleAudioError","e","audioUrl","currentTarget","src","error","sendClientErrorToHost","jsx","Audio$1","memo"],"mappings":"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"}