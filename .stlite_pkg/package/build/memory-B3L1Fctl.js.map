{"version":3,"file":"memory-B3L1Fctl.js","sources":["../../../node_modules/native-file-system-adapter/src/adapters/memory.js"],"sourcesContent":["import { errors } from '../util.js'\nimport config from '../config.js'\n\nconst { File, Blob, DOMException } = config\nconst { INVALID, GONE, MISMATCH, MOD_ERR, SYNTAX, SECURITY, DISALLOWED } = errors\n\nexport class Sink {\n\n  /**\n   * @param {FileHandle} fileHandle\n   * @param {File} file\n   */\n  constructor (fileHandle, file) {\n    this.fileHandle = fileHandle\n    this.file = file\n    this.size = file.size\n    this.position = 0\n  }\n\n  write (chunk) {\n    let file = this.file\n\n    if (typeof chunk === 'object') {\n      if (chunk.type === 'write') {\n        if (Number.isInteger(chunk.position) && chunk.position >= 0) {\n          this.position = chunk.position\n          if (this.size < chunk.position) {\n            this.file = new File(\n              [this.file, new ArrayBuffer(chunk.position - this.size)],\n              this.file.name,\n              this.file\n            )\n          }\n        }\n        if (!('data' in chunk)) {\n          throw new DOMException(...SYNTAX('write requires a data argument'))\n        }\n        chunk = chunk.data\n      } else if (chunk.type === 'seek') {\n        if (Number.isInteger(chunk.position) && chunk.position >= 0) {\n          if (this.size < chunk.position) {\n            throw new DOMException(...INVALID)\n          }\n          this.position = chunk.position\n          return\n        } else {\n          throw new DOMException(...SYNTAX('seek requires a position argument'))\n        }\n      } else if (chunk.type === 'truncate') {\n        if (Number.isInteger(chunk.size) && chunk.size >= 0) {\n          file = chunk.size < this.size\n            ? new File([file.slice(0, chunk.size)], file.name, file)\n            : new File([file, new Uint8Array(chunk.size - this.size)], file.name)\n\n          this.size = file.size\n          if (this.position > file.size) {\n            this.position = file.size\n          }\n          this.file = file\n          return\n        } else {\n          throw new DOMException(...SYNTAX('truncate requires a size argument'))\n        }\n      }\n    }\n\n    chunk = new Blob([chunk])\n\n    let blob = this.file\n    // Calc the head and tail fragments\n    const head = blob.slice(0, this.position)\n    const tail = blob.slice(this.position + chunk.size)\n\n    // Calc the padding\n    let padding = this.position - head.size\n    if (padding < 0) {\n      padding = 0\n    }\n    blob = new File([\n      head,\n      new Uint8Array(padding),\n      chunk,\n      tail\n    ], blob.name)\n\n    this.size = blob.size\n    this.position += chunk.size\n\n    this.file = blob\n  }\n  close () {\n    if (this.fileHandle._deleted) throw new DOMException(...GONE)\n    this.fileHandle._file = this.file\n    this.file =\n    this.position =\n    this.size = null\n    if (this.fileHandle.onclose) {\n      this.fileHandle.onclose(this.fileHandle)\n    }\n  }\n}\n\nexport class FileHandle {\n  constructor (name = '', file = new File([], name), writable = true) {\n    this._file = file\n    this.name = name\n    this.kind = 'file'\n    this._deleted = false\n    this.writable = writable\n    this.readable = true\n  }\n\n  async getFile () {\n    if (this._deleted) throw new DOMException(...GONE)\n    return this._file\n  }\n\n  async createWritable (opts) {\n    if (!this.writable) throw new DOMException(...DISALLOWED)\n    if (this._deleted) throw new DOMException(...GONE)\n\n    const file = opts.keepExistingData\n      ? await this.getFile()\n      : new File([], this.name)\n\n    return new Sink(this, file)\n  }\n\n  async isSameEntry (other) {\n    return this === other\n  }\n\n  async _destroy () {\n    this._deleted = true\n    this._file = null\n  }\n}\n\nexport class FolderHandle {\n\n  /** @param {string} name */\n  constructor (name, writable = true) {\n    this.name = name\n    this.kind = 'directory'\n    this._deleted = false\n    /** @type {Object.<string, (FolderHandle|FileHandle)>} */\n    this._entries = {}\n    this.writable = writable\n    this.readable = true\n  }\n\n  /** @returns {AsyncGenerator<[string, FileHandle | FolderHandle]>} */\n  async * entries () {\n    if (this._deleted) throw new DOMException(...GONE)\n    yield* Object.entries(this._entries)\n  }\n\n  async isSameEntry (other) {\n    return this === other\n  }\n\n  /**\n   * @param {string} name\n   * @param {{ create: boolean; }} opts\n   */\n  async getDirectoryHandle (name, opts) {\n    if (this._deleted) throw new DOMException(...GONE)\n    const entry = this._entries[name]\n    if (entry) { // entry exist\n      if (entry instanceof FileHandle) {\n        throw new DOMException(...MISMATCH)\n      } else {\n        return entry\n      }\n    } else {\n      if (opts.create) {\n        return (this._entries[name] = new FolderHandle(name))\n      } else {\n        throw new DOMException(...GONE)\n      }\n    }\n  }\n\n  /**\n   * @param {string} name\n   * @param {{ create: boolean; }} opts\n   */\n  async getFileHandle (name, opts) {\n    const entry = this._entries[name]\n    const isFile = entry instanceof FileHandle\n    if (entry && isFile) return entry\n    if (entry && !isFile) throw new DOMException(...MISMATCH)\n    if (!entry && !opts.create) throw new DOMException(...GONE)\n    if (!entry && opts.create) {\n      return (this._entries[name] = new FileHandle(name))\n    }\n  }\n\n  async removeEntry (name, opts) {\n    const entry = this._entries[name]\n    if (!entry) throw new DOMException(...GONE)\n    await entry._destroy(opts.recursive)\n    delete this._entries[name]\n  }\n\n  async _destroy (recursive) {\n    for (let x of Object.values(this._entries)) {\n      if (!recursive) throw new DOMException(...MOD_ERR)\n      await x._destroy(recursive)\n    }\n    this._entries = {}\n    this._deleted = true\n  }\n}\n\nconst fs = new FolderHandle('')\n\nexport default () => fs\n"],"names":["File","Blob","DOMException","config","INVALID","GONE","MISMATCH","MOD_ERR","SYNTAX","SECURITY","DISALLOWED","errors","Sink","fileHandle","file","chunk","blob","head","tail","padding","FileHandle","name","writable","opts","other","FolderHandle","entry","isFile","recursive","x","fs","memory"],"mappings":";AAGA,MAAM,EAAE,MAAAA,GAAM,MAAAC,GAAM,cAAAC,MAAiBC,GAC/B,EAAE,SAAAC,GAAS,MAAAC,GAAM,UAAAC,GAAU,SAAAC,GAAS,QAAAC,GAAQ,UAAAC,GAAU,YAAAC,MAAeC;AAEpE,MAAMC,EAAK;AAAA;AAAA;AAAA;AAAA;AAAA,EAMhB,YAAaC,GAAYC,GAAM;AAC7B,SAAK,aAAaD,GAClB,KAAK,OAAOC,GACZ,KAAK,OAAOA,EAAK,MACjB,KAAK,WAAW;AAAA,EAClB;AAAA,EAEA,MAAOC,GAAO;AACZ,QAAID,IAAO,KAAK;AAEhB,QAAI,OAAOC,KAAU;AACnB,UAAIA,EAAM,SAAS,SAAS;AAW1B,YAVI,OAAO,UAAUA,EAAM,QAAQ,KAAKA,EAAM,YAAY,MACxD,KAAK,WAAWA,EAAM,UAClB,KAAK,OAAOA,EAAM,aACpB,KAAK,OAAO,IAAIf;AAAA,UACd,CAAC,KAAK,MAAM,IAAI,YAAYe,EAAM,WAAW,KAAK,IAAI,CAAC;AAAA,UACvD,KAAK,KAAK;AAAA,UACV,KAAK;AAAA,QACnB,KAGY,EAAE,UAAUA;AACd,gBAAM,IAAIb,EAAa,GAAGM,EAAO,gCAAgC,CAAC;AAEpE,QAAAO,IAAQA,EAAM;AAAA,MAChB,WAAWA,EAAM,SAAS;AACxB,YAAI,OAAO,UAAUA,EAAM,QAAQ,KAAKA,EAAM,YAAY,GAAG;AAC3D,cAAI,KAAK,OAAOA,EAAM;AACpB,kBAAM,IAAIb,EAAa,GAAGE,CAAO;AAEnC,eAAK,WAAWW,EAAM;AACtB;AAAA,QACF;AACE,gBAAM,IAAIb,EAAa,GAAGM,EAAO,mCAAmC,CAAC;AAAA,eAE9DO,EAAM,SAAS;AACxB,YAAI,OAAO,UAAUA,EAAM,IAAI,KAAKA,EAAM,QAAQ,GAAG;AACnD,UAAAD,IAAOC,EAAM,OAAO,KAAK,OACrB,IAAIf,EAAK,CAACc,EAAK,MAAM,GAAGC,EAAM,IAAI,CAAC,GAAGD,EAAK,MAAMA,CAAI,IACrD,IAAId,EAAK,CAACc,GAAM,IAAI,WAAWC,EAAM,OAAO,KAAK,IAAI,CAAC,GAAGD,EAAK,IAAI,GAEtE,KAAK,OAAOA,EAAK,MACb,KAAK,WAAWA,EAAK,SACvB,KAAK,WAAWA,EAAK,OAEvB,KAAK,OAAOA;AACZ;AAAA,QACF;AACE,gBAAM,IAAIZ,EAAa,GAAGM,EAAO,mCAAmC,CAAC;AAAA;AAK3E,IAAAO,IAAQ,IAAId,EAAK,CAACc,CAAK,CAAC;AAExB,QAAIC,IAAO,KAAK;AAEhB,UAAMC,IAAOD,EAAK,MAAM,GAAG,KAAK,QAAQ,GAClCE,IAAOF,EAAK,MAAM,KAAK,WAAWD,EAAM,IAAI;AAGlD,QAAII,IAAU,KAAK,WAAWF,EAAK;AACnC,IAAIE,IAAU,MACZA,IAAU,IAEZH,IAAO,IAAIhB,EAAK;AAAA,MACdiB;AAAA,MACA,IAAI,WAAWE,CAAO;AAAA,MACtBJ;AAAA,MACAG;AAAA,IACN,GAAOF,EAAK,IAAI,GAEZ,KAAK,OAAOA,EAAK,MACjB,KAAK,YAAYD,EAAM,MAEvB,KAAK,OAAOC;AAAA,EACd;AAAA,EACA,QAAS;AACP,QAAI,KAAK,WAAW,SAAU,OAAM,IAAId,EAAa,GAAGG,CAAI;AAC5D,SAAK,WAAW,QAAQ,KAAK,MAC7B,KAAK,OACL,KAAK,WACL,KAAK,OAAO,MACR,KAAK,WAAW,WAClB,KAAK,WAAW,QAAQ,KAAK,UAAU;AAAA,EAE3C;AACF;AAEO,MAAMe,EAAW;AAAA,EACtB,YAAaC,IAAO,IAAIP,IAAO,IAAId,EAAK,CAAA,GAAIqB,CAAI,GAAGC,IAAW,IAAM;AAClE,SAAK,QAAQR,GACb,KAAK,OAAOO,GACZ,KAAK,OAAO,QACZ,KAAK,WAAW,IAChB,KAAK,WAAWC,GAChB,KAAK,WAAW;AAAA,EAClB;AAAA,EAEA,MAAM,UAAW;AACf,QAAI,KAAK,SAAU,OAAM,IAAIpB,EAAa,GAAGG,CAAI;AACjD,WAAO,KAAK;AAAA,EACd;AAAA,EAEA,MAAM,eAAgBkB,GAAM;AAC1B,QAAI,CAAC,KAAK,SAAU,OAAM,IAAIrB,EAAa,GAAGQ,CAAU;AACxD,QAAI,KAAK,SAAU,OAAM,IAAIR,EAAa,GAAGG,CAAI;AAEjD,UAAMS,IAAOS,EAAK,mBACd,MAAM,KAAK,QAAO,IAClB,IAAIvB,EAAK,IAAI,KAAK,IAAI;AAE1B,WAAO,IAAIY,EAAK,MAAME,CAAI;AAAA,EAC5B;AAAA,EAEA,MAAM,YAAaU,GAAO;AACxB,WAAO,SAASA;AAAA,EAClB;AAAA,EAEA,MAAM,WAAY;AAChB,SAAK,WAAW,IAChB,KAAK,QAAQ;AAAA,EACf;AACF;AAEO,MAAMC,EAAa;AAAA;AAAA,EAGxB,YAAaJ,GAAMC,IAAW,IAAM;AAClC,SAAK,OAAOD,GACZ,KAAK,OAAO,aACZ,KAAK,WAAW,IAEhB,KAAK,WAAW,CAAA,GAChB,KAAK,WAAWC,GAChB,KAAK,WAAW;AAAA,EAClB;AAAA;AAAA,EAGA,OAAQ,UAAW;AACjB,QAAI,KAAK,SAAU,OAAM,IAAIpB,EAAa,GAAGG,CAAI;AACjD,WAAO,OAAO,QAAQ,KAAK,QAAQ;AAAA,EACrC;AAAA,EAEA,MAAM,YAAamB,GAAO;AACxB,WAAO,SAASA;AAAA,EAClB;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,MAAM,mBAAoBH,GAAME,GAAM;AACpC,QAAI,KAAK,SAAU,OAAM,IAAIrB,EAAa,GAAGG,CAAI;AACjD,UAAMqB,IAAQ,KAAK,SAASL,CAAI;AAChC,QAAIK,GAAO;AACT,UAAIA,aAAiBN;AACnB,cAAM,IAAIlB,EAAa,GAAGI,CAAQ;AAElC,aAAOoB;AAAA,IAEX,OAAO;AACL,UAAIH,EAAK;AACP,eAAQ,KAAK,SAASF,CAAI,IAAI,IAAII,EAAaJ,CAAI;AAEnD,YAAM,IAAInB,EAAa,GAAGG,CAAI;AAAA,IAElC;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,MAAM,cAAegB,GAAME,GAAM;AAC/B,UAAMG,IAAQ,KAAK,SAASL,CAAI,GAC1BM,IAASD,aAAiBN;AAChC,QAAIM,KAASC,EAAQ,QAAOD;AAC5B,QAAIA,KAAS,CAACC,EAAQ,OAAM,IAAIzB,EAAa,GAAGI,CAAQ;AACxD,QAAI,CAACoB,KAAS,CAACH,EAAK,OAAQ,OAAM,IAAIrB,EAAa,GAAGG,CAAI;AAC1D,QAAI,CAACqB,KAASH,EAAK;AACjB,aAAQ,KAAK,SAASF,CAAI,IAAI,IAAID,EAAWC,CAAI;AAAA,EAErD;AAAA,EAEA,MAAM,YAAaA,GAAME,GAAM;AAC7B,UAAMG,IAAQ,KAAK,SAASL,CAAI;AAChC,QAAI,CAACK,EAAO,OAAM,IAAIxB,EAAa,GAAGG,CAAI;AAC1C,UAAMqB,EAAM,SAASH,EAAK,SAAS,GACnC,OAAO,KAAK,SAASF,CAAI;AAAA,EAC3B;AAAA,EAEA,MAAM,SAAUO,GAAW;AACzB,aAASC,KAAK,OAAO,OAAO,KAAK,QAAQ,GAAG;AAC1C,UAAI,CAACD,EAAW,OAAM,IAAI1B,EAAa,GAAGK,CAAO;AACjD,YAAMsB,EAAE,SAASD,CAAS;AAAA,IAC5B;AACA,SAAK,WAAW,CAAA,GAChB,KAAK,WAAW;AAAA,EAClB;AACF;AAEA,MAAME,IAAK,IAAIL,EAAa,EAAE,GAE9BM,IAAe,MAAMD;","x_google_ignoreList":[0]}