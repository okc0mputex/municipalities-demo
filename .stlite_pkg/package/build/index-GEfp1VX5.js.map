{"version":3,"file":"index-GEfp1VX5.js","sources":["../../../node_modules/@emotion-icons/material-outlined/ChevronLeft/ChevronLeft.esm.js","../../../node_modules/@emotion-icons/material-outlined/ChevronRight/ChevronRight.esm.js","../../../node_modules/@emotion-icons/material-outlined/CloudUpload/CloudUpload.esm.js","../../../node_modules/@emotion-icons/material-outlined/Error/Error.esm.js","../../../streamlit/frontend/lib/src/components/widgets/FileUploader/styled-components.ts","../../../streamlit/frontend/lib/src/components/widgets/FileUploader/FileDropzoneInstructions.tsx","../../../streamlit/frontend/lib/src/components/widgets/FileUploader/FileDropzone.tsx","../../../streamlit/frontend/lib/src/components/shared/TextElements/Text.tsx","../../../streamlit/frontend/lib/src/components/widgets/FileUploader/UploadedFile.tsx","../../../streamlit/frontend/lib/src/components/widgets/FileUploader/withPagination/styled-components.ts","../../../streamlit/frontend/lib/src/components/widgets/FileUploader/withPagination/Pagination.tsx","../../../streamlit/frontend/lib/src/components/widgets/FileUploader/withPagination/withPagination.tsx","../../../streamlit/frontend/lib/src/components/widgets/FileUploader/UploadedFiles.tsx","../../../streamlit/frontend/lib/src/components/widgets/FileUploader/FileUploader.tsx"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport * as React from 'react';\nimport { EmotionIconBase } from '@emotion-icons/emotion-icon';\nexport var ChevronLeft = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var attrs = {\n    \"fill\": \"currentColor\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  };\n  return /*#__PURE__*/React.createElement(EmotionIconBase, _extends({\n    iconAttrs: attrs,\n    iconVerticalAlign: \"middle\",\n    iconViewBox: \"0 0 24 24\"\n  }, props, {\n    ref: ref\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    d: \"M0 0h24v24H0V0z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12l4.58-4.59z\"\n  }));\n});\nChevronLeft.displayName = 'ChevronLeft';\nexport var ChevronLeftDimensions = {\n  height: 24,\n  width: 24\n};","import _extends from \"@babel/runtime/helpers/extends\";\nimport * as React from 'react';\nimport { EmotionIconBase } from '@emotion-icons/emotion-icon';\nexport var ChevronRight = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var attrs = {\n    \"fill\": \"currentColor\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  };\n  return /*#__PURE__*/React.createElement(EmotionIconBase, _extends({\n    iconAttrs: attrs,\n    iconVerticalAlign: \"middle\",\n    iconViewBox: \"0 0 24 24\"\n  }, props, {\n    ref: ref\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    d: \"M0 0h24v24H0V0z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6-6-6z\"\n  }));\n});\nChevronRight.displayName = 'ChevronRight';\nexport var ChevronRightDimensions = {\n  height: 24,\n  width: 24\n};","import _extends from \"@babel/runtime/helpers/extends\";\nimport * as React from 'react';\nimport { EmotionIconBase } from '@emotion-icons/emotion-icon';\nexport var CloudUpload = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var attrs = {\n    \"fill\": \"currentColor\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  };\n  return /*#__PURE__*/React.createElement(EmotionIconBase, _extends({\n    iconAttrs: attrs,\n    iconVerticalAlign: \"middle\",\n    iconViewBox: \"0 0 24 24\"\n  }, props, {\n    ref: ref\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    d: \"M0 0h24v24H0V0z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M19.35 10.04A7.49 7.49 0 0012 4C9.11 4 6.6 5.64 5.35 8.04A5.994 5.994 0 000 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96zM19 18H6c-2.21 0-4-1.79-4-4 0-2.05 1.53-3.76 3.56-3.97l1.07-.11.5-.95A5.469 5.469 0 0112 6c2.62 0 4.88 1.86 5.39 4.43l.3 1.5 1.53.11A2.98 2.98 0 0122 15c0 1.65-1.35 3-3 3zM8 13h2.55v3h2.9v-3H16l-4-4z\"\n  }));\n});\nCloudUpload.displayName = 'CloudUpload';\nexport var CloudUploadDimensions = {\n  height: 24,\n  width: 24\n};","import _extends from \"@babel/runtime/helpers/extends\";\nimport * as React from 'react';\nimport { EmotionIconBase } from '@emotion-icons/emotion-icon';\nexport var Error = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var attrs = {\n    \"fill\": \"currentColor\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  };\n  return /*#__PURE__*/React.createElement(EmotionIconBase, _extends({\n    iconAttrs: attrs,\n    iconVerticalAlign: \"middle\",\n    iconViewBox: \"0 0 24 24\"\n  }, props, {\n    ref: ref\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-2h2v2zm0-4h-2V7h2v6z\"\n  }));\n});\nError.displayName = 'Error';\nexport var ErrorDimensions = {\n  height: 24,\n  width: 24\n};","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2025)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport styled, { CSSObject } from \"@emotion/styled\"\n\nimport { convertRemToPx, EmotionTheme } from \"~lib/theme\"\n\nexport interface StyledFileDropzone {\n  isDisabled: boolean\n}\n\nexport const StyledFileDropzoneSection = styled.section<StyledFileDropzone>(\n  ({ isDisabled, theme }) => ({\n    display: \"flex\",\n    alignItems: \"center\",\n    padding: theme.spacing.lg,\n    backgroundColor: theme.colors.secondaryBg,\n    borderRadius: theme.radii.default,\n    border: theme.colors.widgetBorderColor\n      ? `${theme.sizes.borderWidth} solid ${theme.colors.widgetBorderColor}`\n      : undefined,\n    height: theme.sizes.largestElementHeight,\n    \":focus\": {\n      outline: \"none\",\n    },\n    \":focus-visible\": {\n      boxShadow: `0 0 0 1px ${theme.colors.primary}`,\n    },\n    cursor: isDisabled ? \"not-allowed\" : \"pointer\",\n  })\n)\n\nexport const StyledFileDropzoneInstructions = styled.div({\n  marginRight: \"auto\",\n  alignItems: \"center\",\n  display: \"flex\",\n})\n\nexport const StyledFileDropzoneInstructionsFileUploaderIcon = styled.span(\n  ({ theme }) => ({\n    color: theme.colors.darkenedBgMix100,\n    marginRight: theme.spacing.lg,\n  })\n)\n\nexport const StyledFileDropzoneInstructionsText = styled.span<{\n  disabled?: boolean\n}>(({ theme, disabled }) => ({\n  color: disabled ? theme.colors.fadedText40 : theme.colors.bodyText,\n}))\n\nexport const StyledFileDropzoneInstructionsSubtext = styled.span<{\n  disabled?: boolean\n}>(({ theme, disabled }) => ({\n  fontSize: theme.fontSizes.sm,\n  color: disabled ? theme.colors.fadedText40 : theme.colors.fadedText60,\n}))\n\nexport const StyledFileDropzoneInstructionsColumn = styled.div({\n  display: \"flex\",\n  flexDirection: \"column\",\n})\n\nexport const StyledUploadedFiles = styled.div(({ theme }) => ({\n  left: 0,\n  right: 0,\n  lineHeight: theme.lineHeights.tight,\n  paddingTop: theme.spacing.md,\n  paddingLeft: theme.spacing.lg,\n  paddingRight: theme.spacing.lg,\n}))\n\nexport const StyledUploadedFilesList = styled.ul(({ theme }) => ({\n  listStyleType: \"none\",\n  margin: theme.spacing.none,\n  padding: theme.spacing.none,\n}))\n\nexport const StyledUploadedFilesListItem = styled.li(({ theme }) => ({\n  margin: theme.spacing.none,\n  padding: theme.spacing.none,\n}))\n\nexport const StyledUploadedFileData = styled.div(({ theme }) => ({\n  display: \"flex\",\n  alignItems: \"baseline\",\n  flex: 1,\n  paddingLeft: theme.spacing.lg,\n  overflow: \"hidden\",\n}))\n\nexport const StyledUploadedFileName = styled.div(({ theme }) => ({\n  marginRight: theme.spacing.sm,\n  marginBottom: theme.spacing.twoXS,\n  overflow: \"hidden\",\n  textOverflow: \"ellipsis\",\n  whiteSpace: \"nowrap\",\n}))\n\nexport const StyledUploadedFile = styled.div(({ theme }) => ({\n  display: \"flex\",\n  alignItems: \"center\",\n  marginBottom: theme.spacing.twoXS,\n}))\n\nexport const StyledErrorMessage = styled.span(({ theme }) => ({\n  marginRight: theme.spacing.twoXS,\n}))\n\nexport const StyledFileIcon = styled.div(({ theme }) => ({\n  display: \"flex\",\n  padding: theme.spacing.twoXS,\n  color: theme.colors.darkenedBgMix100,\n}))\n\nexport const StyledFileError = styled.small(({ theme }) => ({\n  color: theme.colors.red,\n  fontSize: theme.fontSizes.sm,\n  height: theme.fontSizes.sm,\n  lineHeight: theme.fontSizes.sm,\n  display: \"flex\",\n  alignItems: \"center\",\n  whiteSpace: \"nowrap\",\n}))\n\nexport const StyledFileErrorIcon = styled.span({})\n\nconst compactFileUploader = (theme: EmotionTheme): CSSObject => ({\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any -- TODO: Replace 'any' with a more specific type.\n  [StyledFileDropzoneSection as any]: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"flex-start\",\n    height: \"auto\",\n  },\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any -- TODO: Replace 'any' with a more specific type.\n  [StyledFileDropzoneInstructions as any]: {\n    marginBottom: theme.spacing.sm,\n  },\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any -- TODO: Replace 'any' with a more specific type.\n  [StyledFileDropzoneInstructionsFileUploaderIcon as any]: {\n    display: \"none\",\n  },\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any -- TODO: Replace 'any' with a more specific type.\n  [StyledFileDropzoneInstructionsText as any]: {\n    marginBottom: theme.spacing.twoXS,\n  },\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any -- TODO: Replace 'any' with a more specific type.\n  [StyledUploadedFiles as any]: {\n    paddingRight: theme.spacing.lg,\n  },\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any -- TODO: Replace 'any' with a more specific type.\n  [StyledUploadedFile as any]: {\n    maxWidth: \"inherit\",\n    flex: 1,\n    alignItems: \"flex-start\",\n    marginBottom: theme.spacing.sm,\n  },\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any -- TODO: Replace 'any' with a more specific type.\n  [StyledUploadedFileName as any]: {\n    width: theme.sizes.full,\n  },\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any -- TODO: Replace 'any' with a more specific type.\n  [StyledUploadedFileData as any]: {\n    flexDirection: \"column\",\n  },\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any -- TODO: Replace 'any' with a more specific type.\n  [StyledFileError as any]: {\n    height: \"auto\",\n    whiteSpace: \"initial\",\n  },\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any -- TODO: Replace 'any' with a more specific type.\n  [StyledFileErrorIcon as any]: {\n    display: \"none\",\n  },\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any -- TODO: Replace 'any' with a more specific type.\n  [StyledUploadedFilesListItem as any]: {\n    margin: theme.spacing.none,\n    padding: theme.spacing.none,\n  },\n})\n\ninterface StyledFileUploaderProps {\n  width: number\n}\nexport const StyledFileUploader = styled.div<StyledFileUploaderProps>(\n  ({ theme, width }) => {\n    if (width < convertRemToPx(\"23rem\")) {\n      return compactFileUploader(theme)\n    }\n  }\n)\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2025)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { memo } from \"react\"\n\nimport { CloudUpload } from \"@emotion-icons/material-outlined\"\n\nimport Icon from \"~lib/components/shared/Icon\"\nimport { FileSize, getSizeDisplay } from \"~lib/util/FileHelper\"\n\nimport {\n  StyledFileDropzoneInstructions,\n  StyledFileDropzoneInstructionsColumn,\n  StyledFileDropzoneInstructionsFileUploaderIcon,\n  StyledFileDropzoneInstructionsSubtext,\n  StyledFileDropzoneInstructionsText,\n} from \"./styled-components\"\n\nexport interface Props {\n  multiple: boolean\n  acceptedExtensions: string[]\n  maxSizeBytes: number\n  disabled?: boolean\n}\n\nconst FileDropzoneInstructions = ({\n  multiple,\n  acceptedExtensions,\n  maxSizeBytes,\n  disabled,\n}: Props): React.ReactElement => (\n  <StyledFileDropzoneInstructions data-testid=\"stFileUploaderDropzoneInstructions\">\n    <StyledFileDropzoneInstructionsFileUploaderIcon>\n      <Icon content={CloudUpload} size=\"threeXL\" />\n    </StyledFileDropzoneInstructionsFileUploaderIcon>\n    <StyledFileDropzoneInstructionsColumn>\n      <StyledFileDropzoneInstructionsText disabled={disabled}>\n        Drag and drop file{multiple ? \"s\" : \"\"} here\n      </StyledFileDropzoneInstructionsText>\n      <StyledFileDropzoneInstructionsSubtext disabled={disabled}>\n        {`Limit ${getSizeDisplay(maxSizeBytes, FileSize.Byte, 0)} per file`}\n        {acceptedExtensions.length\n          ? ` • ${acceptedExtensions\n              .map(ext => ext.replace(/^\\./, \"\").toUpperCase())\n              .join(\", \")}`\n          : null}\n      </StyledFileDropzoneInstructionsSubtext>\n    </StyledFileDropzoneInstructionsColumn>\n  </StyledFileDropzoneInstructions>\n)\n\nexport default memo(FileDropzoneInstructions)\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2025)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { memo } from \"react\"\n\nimport Dropzone, { FileRejection } from \"react-dropzone\"\n\nimport BaseButton, {\n  BaseButtonKind,\n  BaseButtonSize,\n} from \"~lib/components/shared/BaseButton\"\n\nimport FileDropzoneInstructions from \"./FileDropzoneInstructions\"\nimport { StyledFileDropzoneSection } from \"./styled-components\"\nimport { getAccept } from \"./utils\"\n\nexport interface Props {\n  disabled: boolean\n  onDrop: (acceptedFiles: File[], rejectedFiles: FileRejection[]) => void\n  multiple: boolean\n  acceptedExtensions: string[]\n  maxSizeBytes: number\n  label: string\n}\n\nconst FileDropzone = ({\n  onDrop,\n  multiple,\n  acceptedExtensions,\n  maxSizeBytes,\n  disabled,\n  label,\n}: Props): React.ReactElement => (\n  <Dropzone\n    onDrop={onDrop}\n    multiple={multiple}\n    accept={getAccept(acceptedExtensions)}\n    maxSize={maxSizeBytes}\n    disabled={disabled}\n    // react-dropzone v12+ uses the File System Access API by default,\n    // causing the bug described in https://github.com/streamlit/streamlit/issues/6176.\n    useFsAccessApi={false}\n  >\n    {({ getRootProps, getInputProps }) => (\n      <StyledFileDropzoneSection\n        {...getRootProps()}\n        data-testid=\"stFileUploaderDropzone\"\n        isDisabled={disabled}\n        aria-label={label}\n      >\n        <input\n          data-testid=\"stFileUploaderDropzoneInput\"\n          {...getInputProps()}\n        />\n        <FileDropzoneInstructions\n          multiple={multiple}\n          acceptedExtensions={acceptedExtensions}\n          maxSizeBytes={maxSizeBytes}\n          disabled={disabled}\n        />\n        <BaseButton\n          kind={BaseButtonKind.SECONDARY}\n          disabled={disabled}\n          size={BaseButtonSize.SMALL}\n        >\n          Browse files\n        </BaseButton>\n      </StyledFileDropzoneSection>\n    )}\n  </Dropzone>\n)\n\nexport default memo(FileDropzone)\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2025)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport styled from \"@emotion/styled\"\n\nexport enum Kind {\n  DANGER = \"danger\",\n}\n\ninterface TextProps {\n  kind?: Kind\n}\n\nexport const Small = styled.small<TextProps>(({ kind, theme }) => {\n  const { danger, fadedText60 } = theme.colors\n\n  return {\n    color: kind === Kind.DANGER ? danger : fadedText60,\n    fontSize: theme.fontSizes.sm,\n    lineHeight: theme.lineHeights.tight,\n  }\n})\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2025)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { memo } from \"react\"\n\nimport {\n  Clear,\n  Error,\n  InsertDriveFile,\n} from \"@emotion-icons/material-outlined\"\n\nimport BaseButton, { BaseButtonKind } from \"~lib/components/shared/BaseButton\"\nimport Icon from \"~lib/components/shared/Icon\"\nimport ProgressBar, { Size } from \"~lib/components/shared/ProgressBar\"\nimport { Small } from \"~lib/components/shared/TextElements\"\nimport { FileSize, getSizeDisplay } from \"~lib/util/FileHelper\"\n\nimport {\n  StyledErrorMessage,\n  StyledFileError,\n  StyledFileErrorIcon,\n  StyledFileIcon,\n  StyledUploadedFile,\n  StyledUploadedFileData,\n  StyledUploadedFileName,\n} from \"./styled-components\"\nimport { UploadFileInfo } from \"./UploadFileInfo\"\n\nexport interface Props {\n  fileInfo: UploadFileInfo\n  onDelete: (id: number) => void\n}\n\nexport interface UploadedFileStatusProps {\n  fileInfo: UploadFileInfo\n}\n\nexport const UploadedFileStatus = ({\n  fileInfo,\n}: UploadedFileStatusProps): React.ReactElement | null => {\n  if (fileInfo.status.type === \"uploading\") {\n    return <ProgressBar value={fileInfo.status.progress} size={Size.SMALL} />\n  }\n\n  if (fileInfo.status.type === \"error\") {\n    return (\n      <StyledFileError>\n        <StyledErrorMessage data-testid=\"stFileUploaderFileErrorMessage\">\n          {fileInfo.status.errorMessage}\n        </StyledErrorMessage>\n        <StyledFileErrorIcon>\n          <Icon content={Error} size=\"lg\" />\n        </StyledFileErrorIcon>\n      </StyledFileError>\n    )\n  }\n\n  if (fileInfo.status.type === \"uploaded\") {\n    return <Small>{getSizeDisplay(fileInfo.size, FileSize.Byte)}</Small>\n  }\n\n  return null\n}\n\nconst UploadedFile = ({ fileInfo, onDelete }: Props): React.ReactElement => {\n  return (\n    <StyledUploadedFile\n      className=\"stFileUploaderFile\"\n      data-testid=\"stFileUploaderFile\"\n    >\n      <StyledFileIcon>\n        <Icon content={InsertDriveFile} size=\"twoXL\" />\n      </StyledFileIcon>\n      <StyledUploadedFileData className=\"stFileUploaderFileData\">\n        <StyledUploadedFileName\n          className=\"stFileUploaderFileName\"\n          data-testid=\"stFileUploaderFileName\"\n          title={fileInfo.name}\n        >\n          {fileInfo.name}\n        </StyledUploadedFileName>\n        <UploadedFileStatus fileInfo={fileInfo} />\n      </StyledUploadedFileData>\n      <div data-testid=\"stFileUploaderDeleteBtn\">\n        <BaseButton\n          onClick={() => onDelete(fileInfo.id)}\n          kind={BaseButtonKind.MINIMAL}\n        >\n          <Icon content={Clear} size=\"lg\" />\n        </BaseButton>\n      </div>\n    </StyledUploadedFile>\n  )\n}\n\nexport default memo(UploadedFile)\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2025)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport styled from \"@emotion/styled\"\n\nexport const StyledPagination = styled.div(({ theme }) => ({\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"space-between\",\n  paddingBottom: theme.spacing.twoXS,\n  marginBottom: theme.spacing.twoXS,\n}))\n\nexport const StyledPaginators = styled.div(({ theme }) => ({\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  color: theme.colors.fadedText40,\n}))\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2025)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { memo } from \"react\"\n\nimport { ChevronLeft, ChevronRight } from \"@emotion-icons/material-outlined\"\n\nimport BaseButton, { BaseButtonKind } from \"~lib/components/shared/BaseButton\"\nimport Icon from \"~lib/components/shared/Icon\"\nimport { Small } from \"~lib/components/shared/TextElements\"\n\nimport { StyledPagination, StyledPaginators } from \"./styled-components\"\n\nexport interface Props {\n  currentPage: number\n  totalPages: number\n  pageSize: number\n  onNext: (event: React.SyntheticEvent<HTMLElement>) => void\n  onPrevious: (event: React.SyntheticEvent<HTMLElement>) => void\n}\n\nconst Pagination = ({\n  currentPage,\n  totalPages,\n  onNext,\n  onPrevious,\n}: Props): React.ReactElement => {\n  return (\n    <StyledPagination data-testid=\"stFileUploaderPagination\">\n      <Small>{`Showing page ${currentPage} of ${totalPages}`}</Small>\n      <StyledPaginators>\n        <BaseButton onClick={onPrevious} kind={BaseButtonKind.MINIMAL}>\n          <Icon content={ChevronLeft} size=\"xl\" />\n        </BaseButton>\n        <BaseButton onClick={onNext} kind={BaseButtonKind.MINIMAL}>\n          <Icon content={ChevronRight} size=\"xl\" />\n        </BaseButton>\n      </StyledPaginators>\n    </StyledPagination>\n  )\n}\n\nexport default memo(Pagination)\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2025)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { ComponentType, ReactElement, useEffect, useState } from \"react\"\n\nimport hoistNonReactStatics from \"hoist-non-react-statics\"\n\nimport { usePrevious } from \"~lib/util/Hooks\"\n\nimport Pagination from \"./Pagination\"\n\nexport interface Props {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any -- TODO: Replace 'any' with a more specific type.\n  items: any[]\n  pageSize: number\n  resetOnAdd: boolean\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any -- TODO: Replace 'any' with a more specific type.\nconst calculateNumPages = (items: any[], pageSize: number): number =>\n  Math.ceil(items.length / pageSize)\n\nconst withPagination = (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any -- TODO: Replace 'any' with a more specific type.\n  WrappedComponent: ComponentType<React.PropsWithChildren<any>>\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any -- TODO: Replace 'any' with a more specific type.\n): ComponentType<React.PropsWithChildren<any>> => {\n  const WithPagination = ({\n    pageSize,\n    items,\n    resetOnAdd,\n    ...props\n  }: Props): ReactElement => {\n    const [currentPage, updateCurrentPage] = useState<number>(0)\n    const [totalPages, updateTotalPages] = useState<number>(() =>\n      calculateNumPages(items, pageSize)\n    )\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any -- TODO: Replace 'any' with a more specific type.\n    const prevItems: any[] = usePrevious(items)\n\n    useEffect(() => {\n      if (prevItems && prevItems.length !== items.length) {\n        updateTotalPages(calculateNumPages(items, pageSize))\n      }\n      if (prevItems && prevItems.length < items.length) {\n        if (resetOnAdd) {\n          updateCurrentPage(0)\n        }\n      } else if (currentPage + 1 >= totalPages) {\n        updateCurrentPage(totalPages - 1)\n      }\n    }, [items, currentPage, pageSize, prevItems, resetOnAdd, totalPages])\n\n    const onNext = (): void => {\n      updateCurrentPage(Math.min(currentPage + 1, totalPages - 1))\n    }\n\n    const onPrevious = (): void => {\n      updateCurrentPage(Math.max(0, currentPage - 1))\n    }\n\n    const paginatedItems = items.slice(\n      currentPage * pageSize,\n      currentPage * pageSize + pageSize\n    )\n    return (\n      <>\n        <WrappedComponent items={paginatedItems} {...props} />\n        {items.length > pageSize ? (\n          <Pagination\n            pageSize={pageSize}\n            totalPages={totalPages}\n            currentPage={currentPage + 1}\n            onNext={onNext}\n            onPrevious={onPrevious}\n          />\n        ) : null}\n      </>\n    )\n  }\n  return hoistNonReactStatics(WithPagination, WrappedComponent)\n}\n\nexport default withPagination\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2025)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { memo, ReactElement } from \"react\"\n\nimport {\n  StyledUploadedFiles,\n  StyledUploadedFilesList,\n  StyledUploadedFilesListItem,\n} from \"./styled-components\"\nimport UploadedFile from \"./UploadedFile\"\nimport { UploadFileInfo } from \"./UploadFileInfo\"\nimport withPagination, { PaginationProps } from \"./withPagination\"\n\nexport interface Props {\n  items: UploadFileInfo[]\n  onDelete: (id: number) => void\n}\n\nconst UploadedFileList = ({ items, onDelete }: Props): ReactElement => {\n  return (\n    <StyledUploadedFilesList>\n      {items.map(file => (\n        <StyledUploadedFilesListItem key={file.id}>\n          <UploadedFile fileInfo={file} onDelete={onDelete} />\n        </StyledUploadedFilesListItem>\n      ))}\n    </StyledUploadedFilesList>\n  )\n}\n\nexport const PaginatedFiles = withPagination(UploadedFileList)\n\nconst UploadedFiles = (props: Props & PaginationProps): ReactElement => (\n  <StyledUploadedFiles>\n    <PaginatedFiles {...props} />\n  </StyledUploadedFiles>\n)\nexport default memo(UploadedFiles)\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2025)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { memo, PureComponent } from \"react\"\n\nimport axios from \"axios\"\nimport isEqual from \"lodash/isEqual\"\nimport zip from \"lodash/zip\"\nimport { flushSync } from \"react-dom\"\nimport { FileRejection } from \"react-dropzone\"\n\nimport {\n  FileUploader as FileUploaderProto,\n  FileUploaderState as FileUploaderStateProto,\n  FileURLs as FileURLsProto,\n  IFileURLs,\n  UploadedFileInfo as UploadedFileInfoProto,\n} from \"@streamlit/protobuf\"\n\nimport { withCalculatedWidth } from \"~lib/components/core/Layout/withCalculatedWidth\"\nimport { Placement } from \"~lib/components/shared/Tooltip\"\nimport TooltipIcon from \"~lib/components/shared/TooltipIcon\"\nimport {\n  StyledWidgetLabelHelp,\n  WidgetLabel,\n} from \"~lib/components/widgets/BaseWidget\"\nimport { FormClearHelper } from \"~lib/components/widgets/Form\"\nimport { FileUploadClient } from \"~lib/FileUploadClient\"\nimport {\n  FileSize,\n  getRejectedFileInfo,\n  sizeConverter,\n} from \"~lib/util/FileHelper\"\nimport {\n  isNullOrUndefined,\n  labelVisibilityProtoValueToEnum,\n} from \"~lib/util/utils\"\nimport { WidgetStateManager } from \"~lib/WidgetStateManager\"\n\nimport FileDropzone from \"./FileDropzone\"\nimport { StyledFileUploader } from \"./styled-components\"\nimport UploadedFiles from \"./UploadedFiles\"\nimport { UploadedStatus, UploadFileInfo } from \"./UploadFileInfo\"\n\ninterface InnerProps {\n  disabled: boolean\n  element: FileUploaderProto\n  widgetMgr: WidgetStateManager\n  uploadClient: FileUploadClient\n  fragmentId?: string\n  width: number\n}\n\nexport type Props = Omit<InnerProps, \"width\">\n\ntype FileUploaderStatus =\n  | \"ready\" // FileUploader can upload or delete files\n  | \"updating\" // at least one file is being uploaded or deleted\n\nexport interface State {\n  /**\n   * List of files dropped on the FileUploader by the user. This list includes\n   * rejected files that will not be updated.\n   */\n  files: UploadFileInfo[]\n}\n\nclass FileUploader extends PureComponent<InnerProps, State> {\n  private readonly formClearHelper = new FormClearHelper()\n\n  /**\n   * A counter for assigning unique internal IDs to each file tracked\n   * by the uploader. These IDs are used to update file state internally,\n   * and are separate from the serverFileIds that are returned by the server.\n   */\n  private localFileIdCounter = 1\n\n  /**\n   * A flag to handle the case where a file uploader that only accepts one file\n   * at a time has its file replaced, which we want to treat as a single change\n   * rather than the deletion of a file followed by the upload of another.\n   * Doing this ensures that the script (and thus callbacks, etc) is only run a\n   * single time when replacing a file.  Note that deleting a file and uploading\n   * a new one with two interactions (clicking the 'X', then dragging a file\n   * into the file uploader) will still cause the script to execute twice.\n   */\n  private forceUpdatingStatus = false\n\n  public constructor(props: InnerProps) {\n    super(props)\n    this.state = this.initialValue\n  }\n\n  get initialValue(): State {\n    const emptyState = { files: [] }\n    const { widgetMgr, element } = this.props\n\n    const widgetValue = widgetMgr.getFileUploaderStateValue(element)\n    if (isNullOrUndefined(widgetValue)) {\n      return emptyState\n    }\n\n    const { uploadedFileInfo } = widgetValue\n    if (isNullOrUndefined(uploadedFileInfo) || uploadedFileInfo.length === 0) {\n      return emptyState\n    }\n\n    return {\n      files: uploadedFileInfo.map(f => {\n        const name = f.name as string\n        const size = f.size as number\n\n        const fileId = f.fileId as string\n        const fileUrls = f.fileUrls as FileURLsProto\n\n        return new UploadFileInfo(name, size, this.nextLocalFileId(), {\n          type: \"uploaded\",\n          fileId,\n          fileUrls,\n        })\n      }),\n    }\n  }\n\n  public override componentWillUnmount(): void {\n    this.formClearHelper.disconnect()\n  }\n\n  /**\n   * Return this.props.element.maxUploadSizeMb, converted to bytes.\n   */\n  private get maxUploadSizeInBytes(): number {\n    const maxMbs = this.props.element.maxUploadSizeMb\n    return sizeConverter(maxMbs, FileSize.Megabyte, FileSize.Byte)\n  }\n\n  /**\n   * Return the FileUploader's current status, which is derived from\n   * its state.\n   */\n  public get status(): FileUploaderStatus {\n    const isFileUpdating = (file: UploadFileInfo): boolean =>\n      file.status.type === \"uploading\"\n\n    // If any of our files is Uploading or Deleting, then we're currently\n    // updating.\n    if (this.state.files.some(isFileUpdating) || this.forceUpdatingStatus) {\n      return \"updating\"\n    }\n\n    return \"ready\"\n  }\n\n  public override componentDidUpdate = (): void => {\n    // If our status is not \"ready\", then we have uploads in progress.\n    // We won't submit a new widgetValue until all uploads have resolved.\n    if (this.status !== \"ready\") {\n      return\n    }\n\n    const newWidgetValue = this.createWidgetValue()\n    const { element, widgetMgr, fragmentId } = this.props\n\n    // Maybe send a widgetValue update to the widgetStateManager.\n    const prevWidgetValue = widgetMgr.getFileUploaderStateValue(element)\n    if (!isEqual(newWidgetValue, prevWidgetValue)) {\n      widgetMgr.setFileUploaderStateValue(\n        element,\n        newWidgetValue,\n        {\n          fromUi: true,\n        },\n        fragmentId\n      )\n    }\n  }\n\n  public override componentDidMount(): void {\n    const newWidgetValue = this.createWidgetValue()\n    const { element, widgetMgr, fragmentId } = this.props\n\n    // Set the state value on mount, to avoid triggering an extra rerun after\n    // the first rerun.\n    const prevWidgetValue = widgetMgr.getFileUploaderStateValue(element)\n    if (prevWidgetValue === undefined) {\n      widgetMgr.setFileUploaderStateValue(\n        element,\n        newWidgetValue,\n        {\n          fromUi: false,\n        },\n        fragmentId\n      )\n    }\n  }\n\n  private createWidgetValue(): FileUploaderStateProto {\n    const uploadedFileInfo: UploadedFileInfoProto[] = this.state.files\n      .filter(f => f.status.type === \"uploaded\")\n      .map(f => {\n        const { name, size, status } = f\n        const { fileId, fileUrls } = status as UploadedStatus\n        return new UploadedFileInfoProto({\n          fileId,\n          fileUrls,\n          name,\n          size,\n        })\n      })\n\n    return new FileUploaderStateProto({ uploadedFileInfo })\n  }\n\n  /**\n   * Called by react-dropzone when files and drag-and-dropped onto the widget.\n   *\n   * @param acceptedFiles an array of files.\n   * @param rejectedFiles an array of FileRejections. A FileRejection\n   * encapsulates a File and an error indicating why it was rejected by\n   * the dropzone widget.\n   */\n  private dropHandler = (\n    acceptedFiles: File[],\n    rejectedFiles: FileRejection[]\n  ): void => {\n    const { element } = this.props\n    const { multipleFiles } = element\n\n    // If this is a single-file uploader and multiple files were dropped,\n    // all the files will be rejected. In this case, we pull out the first\n    // valid file into acceptedFiles, and reject the rest.\n    if (\n      !multipleFiles &&\n      acceptedFiles.length === 0 &&\n      rejectedFiles.length > 1\n    ) {\n      const firstFileIndex = rejectedFiles.findIndex(\n        file =>\n          file.errors.length === 1 && file.errors[0].code === \"too-many-files\"\n      )\n\n      if (firstFileIndex >= 0) {\n        acceptedFiles.push(rejectedFiles[firstFileIndex].file)\n        rejectedFiles.splice(firstFileIndex, 1)\n      }\n    }\n\n    this.props.uploadClient\n      .fetchFileURLs(acceptedFiles)\n      .then((fileURLsArray: IFileURLs[]) => {\n        // If this is a single-file uploader that already has an uploaded file,\n        // remove that file so that it can be replaced with our new one.\n        if (!multipleFiles && acceptedFiles.length > 0) {\n          const existingFile = this.state.files.find(\n            f => f.status.type !== \"error\"\n          )\n          if (existingFile) {\n            this.forceUpdatingStatus = true\n            this.deleteFile(existingFile.id)\n            this.forceUpdatingStatus = false\n          }\n        }\n\n        zip(fileURLsArray, acceptedFiles).forEach(\n          ([fileURLs, acceptedFile]) => {\n            this.uploadFile(fileURLs as FileURLsProto, acceptedFile as File)\n          }\n        )\n      })\n      .catch((errorMessage: string) => {\n        this.addFiles(\n          acceptedFiles.map(f => {\n            return new UploadFileInfo(f.name, f.size, this.nextLocalFileId(), {\n              type: \"error\",\n              errorMessage,\n            })\n          })\n        )\n      })\n\n    // Create an UploadFileInfo for each of our rejected files, and add them to\n    // our state.\n    if (rejectedFiles.length > 0) {\n      const rejectedInfos = rejectedFiles.map(rejected =>\n        getRejectedFileInfo(\n          rejected,\n          this.nextLocalFileId(),\n          this.maxUploadSizeInBytes\n        )\n      )\n      this.addFiles(rejectedInfos)\n    }\n  }\n\n  public uploadFile = (fileURLs: IFileURLs, file: File): void => {\n    // Create an UploadFileInfo for this file and add it to our state.\n    const cancelToken = axios.CancelToken.source()\n    const uploadingFileInfo = new UploadFileInfo(\n      file.name,\n      file.size,\n      this.nextLocalFileId(),\n      {\n        type: \"uploading\",\n        cancelToken,\n        progress: 1,\n      }\n    )\n    this.addFile(uploadingFileInfo)\n\n    this.props.uploadClient\n      .uploadFile(\n        this.props.element,\n        fileURLs.uploadUrl as string,\n        file,\n        e => this.onUploadProgress(e, uploadingFileInfo.id),\n        cancelToken.token\n      )\n      .then(() => this.onUploadComplete(uploadingFileInfo.id, fileURLs))\n      .catch(err => {\n        // If this was a cancel error, we don't show the user an error -\n        // the cancellation was in response to an action they took.\n        if (!axios.isCancel(err)) {\n          this.updateFile(\n            uploadingFileInfo.id,\n            uploadingFileInfo.setStatus({\n              type: \"error\",\n              errorMessage: err ? err.toString() : \"Unknown error\",\n            })\n          )\n        }\n      })\n  }\n\n  /**\n   * Called when an upload has completed. Updates the file's status, and\n   * assigns it the new file ID returned from the server.\n   */\n  private onUploadComplete = (\n    localFileId: number,\n    fileUrls: IFileURLs\n  ): void => {\n    const curFile = this.getFile(localFileId)\n    if (isNullOrUndefined(curFile) || curFile.status.type !== \"uploading\") {\n      // The file may have been canceled right before the upload\n      // completed. In this case, we just bail.\n      return\n    }\n\n    this.updateFile(\n      curFile.id,\n      curFile.setStatus({\n        type: \"uploaded\",\n        fileId: fileUrls.fileId as string,\n        fileUrls,\n      })\n    )\n  }\n\n  /**\n   * Delete the file with the given ID:\n   * - Cancel the file upload if it's in progress\n   * - Remove the fileID from our local state\n   * We don't actually tell the server to delete the file. It will garbage\n   * collect it.\n   */\n  public deleteFile = (fileId: number): void => {\n    const file = this.getFile(fileId)\n    if (isNullOrUndefined(file)) {\n      return\n    }\n\n    if (file.status.type === \"uploading\") {\n      // The file hasn't been uploaded. Let's cancel the request.\n      // However, it may have been received by the server so we'll still\n      // send out a request to delete.\n      file.status.cancelToken.cancel()\n    }\n\n    if (file.status.type === \"uploaded\" && file.status.fileUrls.deleteUrl) {\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises -- TODO: Fix this\n      this.props.uploadClient.deleteFile(file.status.fileUrls.deleteUrl)\n    }\n\n    this.removeFile(fileId)\n  }\n\n  /** Append the given file to `state.files`. */\n  private addFile = (file: UploadFileInfo): void => {\n    /* eslint-disable-next-line @eslint-react/dom/no-flush-sync --\n     * Using flushSync here because we need the state to be immediately updated\n     * before any subsequent file upload operations occur.\n     */\n    flushSync(() => {\n      this.setState(state => ({ files: [...state.files, file] }))\n    })\n  }\n\n  /** Append the given files to `state.files`. */\n  private addFiles = (files: UploadFileInfo[]): void => {\n    /* eslint-disable-next-line @eslint-react/dom/no-flush-sync --\n     * Using flushSync here because we need the state to be immediately updated\n     * before any subsequent file upload operations occur.\n     */\n    flushSync(() => {\n      this.setState(state => ({ files: [...state.files, ...files] }))\n    })\n  }\n\n  /** Remove the file with the given ID from `state.files`. */\n  private removeFile = (idToRemove: number): void => {\n    /* eslint-disable-next-line @eslint-react/dom/no-flush-sync --\n     * Using flushSync here because we need the state to be immediately updated\n     * before any subsequent file upload operations occur.\n     */\n    flushSync(() => {\n      this.setState(state => ({\n        files: state.files.filter(file => file.id !== idToRemove),\n      }))\n    })\n  }\n\n  /**\n   * Return the file with the given ID, if one exists.\n   */\n  private getFile = (fileId: number): UploadFileInfo | undefined => {\n    return this.state.files.find(file => file.id === fileId)\n  }\n\n  /** Replace the file with the given id in `state.files`. */\n  private updateFile = (curFileId: number, newFile: UploadFileInfo): void => {\n    /* eslint-disable-next-line @eslint-react/dom/no-flush-sync --\n     * Using flushSync here because we need the state to be immediately updated\n     * before any subsequent file upload operations occur.\n     */\n    flushSync(() => {\n      this.setState(curState => {\n        return {\n          files: curState.files.map(file =>\n            file.id === curFileId ? newFile : file\n          ),\n        }\n      })\n    })\n  }\n\n  /**\n   * Callback for file upload progress. Updates a single file's local `progress`\n   * state.\n   */\n  private onUploadProgress = (event: ProgressEvent, fileId: number): void => {\n    const file = this.getFile(fileId)\n    if (isNullOrUndefined(file) || file.status.type !== \"uploading\") {\n      return\n    }\n\n    const newProgress = Math.round((event.loaded * 100) / event.total)\n    if (file.status.progress === newProgress) {\n      return\n    }\n\n    // Update file.progress\n    this.updateFile(\n      fileId,\n      file.setStatus({\n        type: \"uploading\",\n        cancelToken: file.status.cancelToken,\n        progress: newProgress,\n      })\n    )\n  }\n\n  /**\n   * If we're part of a clear_on_submit form, this will be called when our\n   * form is submitted. Restore our default value and update the WidgetManager.\n   */\n  private onFormCleared = (): void => {\n    /* eslint-disable-next-line @eslint-react/dom/no-flush-sync --\n     * Using flushSync here because we need the state to be immediately updated\n     * before any subsequent file upload operations occur.\n     */\n    flushSync(() => {\n      this.setState({ files: [] }, () => {\n        const newWidgetValue = this.createWidgetValue()\n        if (isNullOrUndefined(newWidgetValue)) {\n          return\n        }\n\n        const { widgetMgr, element, fragmentId } = this.props\n        widgetMgr.setFileUploaderStateValue(\n          element,\n          newWidgetValue,\n          { fromUi: true },\n          fragmentId\n        )\n      })\n    })\n  }\n\n  public override render(): React.ReactNode {\n    const { files } = this.state\n    const { element, disabled, widgetMgr, width } = this.props\n    const acceptedExtensions = element.type\n\n    // Manage our form-clear event handler.\n    this.formClearHelper.manageFormClearListener(\n      widgetMgr,\n      element.formId,\n      this.onFormCleared\n    )\n\n    // We display files in the reverse order they were added.\n    // This way, if you have multiple pages of uploaded files and then drop\n    // another one, you'll see that newest file at the top of the first page.\n    const newestToOldestFiles = files.slice().reverse()\n\n    return (\n      <StyledFileUploader\n        className=\"stFileUploader\"\n        data-testid=\"stFileUploader\"\n        width={width}\n      >\n        <WidgetLabel\n          label={element.label}\n          disabled={disabled}\n          labelVisibility={labelVisibilityProtoValueToEnum(\n            element.labelVisibility?.value\n          )}\n        >\n          {element.help && (\n            <StyledWidgetLabelHelp>\n              <TooltipIcon\n                content={element.help}\n                placement={Placement.TOP_RIGHT}\n              />\n            </StyledWidgetLabelHelp>\n          )}\n        </WidgetLabel>\n        <FileDropzone\n          onDrop={this.dropHandler}\n          multiple={element.multipleFiles}\n          acceptedExtensions={acceptedExtensions}\n          maxSizeBytes={this.maxUploadSizeInBytes}\n          label={element.label}\n          disabled={disabled}\n        />\n        {newestToOldestFiles.length > 0 && (\n          <UploadedFiles\n            items={newestToOldestFiles}\n            pageSize={3}\n            onDelete={this.deleteFile}\n            resetOnAdd\n          />\n        )}\n      </StyledFileUploader>\n    )\n  }\n\n  private nextLocalFileId(): number {\n    return this.localFileIdCounter++\n  }\n}\n\nconst FileUploaderWithCalculatedWidth = withCalculatedWidth(memo(FileUploader))\nexport default FileUploaderWithCalculatedWidth\n"],"names":["ChevronLeft","React.forwardRef","props","ref","attrs","React.createElement","EmotionIconBase","_extends","ChevronRight","CloudUpload","Error","StyledFileDropzoneSection","_styled","target","isDisabled","theme","display","alignItems","padding","spacing","lg","backgroundColor","colors","secondaryBg","borderRadius","radii","default","border","widgetBorderColor","sizes","borderWidth","undefined","height","largestElementHeight","outline","boxShadow","primary","cursor","StyledFileDropzoneInstructions","name","styles","StyledFileDropzoneInstructionsFileUploaderIcon","color","darkenedBgMix100","marginRight","StyledFileDropzoneInstructionsText","disabled","fadedText40","bodyText","StyledFileDropzoneInstructionsSubtext","fontSize","fontSizes","sm","fadedText60","StyledFileDropzoneInstructionsColumn","StyledUploadedFiles","left","right","lineHeight","lineHeights","tight","paddingTop","md","paddingLeft","paddingRight","StyledUploadedFilesList","listStyleType","margin","none","StyledUploadedFilesListItem","StyledUploadedFileData","flex","overflow","StyledUploadedFileName","marginBottom","twoXS","textOverflow","whiteSpace","StyledUploadedFile","StyledErrorMessage","StyledFileIcon","StyledFileError","red","StyledFileErrorIcon","compactFileUploader","flexDirection","maxWidth","width","full","StyledFileUploader","convertRemToPx","FileDropzoneInstructions","multiple","acceptedExtensions","maxSizeBytes","jsxs","jsx","Icon","getSizeDisplay","FileSize","Byte","length","map","ext","replace","toUpperCase","join","FileDropzoneInstructions$1","memo","FileDropzone","onDrop","label","Dropzone","getAccept","getRootProps","getInputProps","BaseButton","BaseButtonKind","SECONDARY","BaseButtonSize","SMALL","FileDropzone$1","Small","kind","danger","Kind","UploadedFileStatus","fileInfo","status","type","ProgressBar","progress","Size","errorMessage","size","UploadedFile","onDelete","InsertDriveFile","id","MINIMAL","Clear","UploadedFile$1","StyledPagination","justifyContent","paddingBottom","StyledPaginators","Pagination","currentPage","totalPages","onNext","onPrevious","Pagination$1","calculateNumPages","items","pageSize","Math","ceil","withPagination","WrappedComponent","hoistNonReactStatics","WithPagination","resetOnAdd","updateCurrentPage","useState","updateTotalPages","prevItems","usePrevious","useEffect","min","max","paginatedItems","slice","Fragment","UploadedFileList","file","PaginatedFiles","UploadedFiles","UploadedFiles$1","FileUploader","PureComponent","constructor","formClearHelper","FormClearHelper","localFileIdCounter","forceUpdatingStatus","componentDidUpdate","newWidgetValue","createWidgetValue","element","widgetMgr","fragmentId","prevWidgetValue","getFileUploaderStateValue","isEqual","setFileUploaderStateValue","fromUi","dropHandler","acceptedFiles","rejectedFiles","multipleFiles","firstFileIndex","findIndex","errors","code","push","splice","uploadClient","fetchFileURLs","then","fileURLsArray","existingFile","state","files","find","f","deleteFile","zip","forEach","fileURLs","acceptedFile","uploadFile","catch","addFiles","UploadFileInfo","nextLocalFileId","rejectedInfos","rejected","getRejectedFileInfo","maxUploadSizeInBytes","cancelToken","axios","CancelToken","source","uploadingFileInfo","addFile","uploadUrl","e","onUploadProgress","token","onUploadComplete","err","isCancel","updateFile","setStatus","toString","localFileId","fileUrls","curFile","getFile","isNullOrUndefined","fileId","cancel","deleteUrl","removeFile","flushSync","setState","idToRemove","filter","curFileId","newFile","curState","event","newProgress","round","loaded","total","onFormCleared","initialValue","emptyState","widgetValue","uploadedFileInfo","componentWillUnmount","disconnect","maxMbs","maxUploadSizeMb","sizeConverter","Megabyte","isFileUpdating","some","componentDidMount","UploadedFileInfoProto","FileUploaderStateProto","render","manageFormClearListener","formId","newestToOldestFiles","reverse","WidgetLabel","labelVisibilityProtoValueToEnum","labelVisibility","value","help","StyledWidgetLabelHelp","TooltipIcon","Placement","TOP_RIGHT","FileUploaderWithCalculatedWidth","withCalculatedWidth"],"mappings":"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","x_google_ignoreList":[0,1,2,3]}