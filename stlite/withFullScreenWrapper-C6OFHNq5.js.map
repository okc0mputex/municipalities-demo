{"version":3,"file":"withFullScreenWrapper-C6OFHNq5.js","sources":["../../../streamlit/frontend/lib/src/components/shared/ElementFullscreen/ElementFullscreenContext.tsx","../../../streamlit/frontend/lib/src/components/shared/FullScreenWrapper/styled-components.tsx","../../../streamlit/frontend/lib/src/components/shared/ElementFullscreen/useFullscreen.tsx","../../../streamlit/frontend/lib/src/components/shared/ElementFullscreen/ElementFullscreenWrapper.tsx","../../../streamlit/frontend/lib/src/components/shared/FullScreenWrapper/withFullScreenWrapper.tsx"],"sourcesContent":["/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2025)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createContext } from \"react\"\n\ntype ElementFullscreenContextShape = {\n  width: number | undefined\n  height: number | undefined\n  expanded: boolean\n  expand: () => void\n  collapse: () => void\n}\n\nexport const ElementFullscreenContext =\n  createContext<ElementFullscreenContextShape | null>(null)\nElementFullscreenContext.displayName = \"ElementFullscreenContext\"\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2025)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport styled from \"@emotion/styled\"\n\nexport interface StyledFullScreenFrameProps {\n  isExpanded: boolean\n}\n\nexport const StyledFullScreenFrame = styled.div<StyledFullScreenFrameProps>(\n  ({ theme, isExpanded }) => ({\n    width: \"100%\",\n    ...(isExpanded\n      ? {\n          position: \"fixed\",\n          top: 0,\n          left: 0,\n          bottom: 0,\n          right: 0,\n          background: theme.colors.bgColor,\n          zIndex: theme.zIndices.fullscreenWrapper,\n          padding: theme.spacing.md,\n          paddingTop: theme.sizes.fullScreenHeaderHeight,\n          overflow: \"auto\",\n          display: \"flex\", // To avoid extra spaces that lead to scrollbars.\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        }\n      : {}),\n  })\n)\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2025)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { useCallback, useContext, useEffect, useMemo, useState } from \"react\"\n\nimport { LibContext } from \"~lib/components/core/LibContext\"\nimport { useWindowDimensionsContext } from \"~lib/components/shared/WindowDimensions/useWindowDimensionsContext\"\n\nexport type UseEscapeToCollapseArgs = {\n  expanded: boolean\n  zoomOut: () => void\n}\n\nexport type UseFullscreenShape = {\n  expanded: boolean\n  fullHeight: number\n  fullWidth: number\n  zoomIn: () => void\n  zoomOut: () => void\n}\n\nexport const useFullscreen = (): UseFullscreenShape => {\n  const { setFullScreen } = useContext(LibContext)\n  const [expanded, setExpanded] = useState(false)\n  const { fullHeight, fullWidth } = useWindowDimensionsContext()\n\n  const setExpandedState = useCallback(\n    (isExpanded: boolean) => {\n      // Set the local component-level state\n      setExpanded(isExpanded)\n      // Set the context-level state\n      setFullScreen(isExpanded)\n    },\n    [setFullScreen]\n  )\n\n  const zoomIn = useCallback(() => {\n    document.body.style.overflow = \"hidden\"\n    setExpandedState(true)\n  }, [setExpandedState])\n\n  const zoomOut = useCallback(() => {\n    // TODO: Update to match React best practices\n    // eslint-disable-next-line react-hooks/react-compiler\n    document.body.style.overflow = \"unset\"\n    setExpandedState(false)\n  }, [setExpandedState])\n\n  const controlKeys = useCallback(\n    (event: KeyboardEvent) => {\n      /**\n       * keyCode 27 is the ESC key\n       * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/keyCode\n       */\n      if (event.keyCode === 27 && expanded) {\n        // Exit fullscreen\n        zoomOut()\n      }\n    },\n    [zoomOut, expanded]\n  )\n\n  useEffect(() => {\n    document.addEventListener(\"keydown\", controlKeys, false)\n\n    return () => {\n      document.removeEventListener(\"keydown\", controlKeys, false)\n    }\n  }, [controlKeys])\n\n  return useMemo(() => {\n    return { expanded, zoomIn, zoomOut, fullHeight, fullWidth }\n  }, [expanded, zoomIn, zoomOut, fullHeight, fullWidth])\n}\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2025)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { FC, PropsWithChildren, useMemo } from \"react\"\n\nimport { ElementFullscreenContext } from \"~lib/components/shared/ElementFullscreen/ElementFullscreenContext\"\nimport { StyledFullScreenFrame } from \"~lib/components/shared/FullScreenWrapper/styled-components\"\nimport { useCalculatedWidth } from \"~lib/hooks/useCalculatedWidth\"\nimport { useEmotionTheme } from \"~lib/hooks/useEmotionTheme\"\n\nimport { useFullscreen } from \"./useFullscreen\"\n\ntype ElementFullscreenWrapperProps = PropsWithChildren<{\n  height?: number\n  width?: number\n}>\n\nconst ElementFullscreenWrapper: FC<ElementFullscreenWrapperProps> = ({\n  children,\n  height,\n}) => {\n  const theme = useEmotionTheme()\n  const { expanded, fullHeight, fullWidth, zoomIn, zoomOut } = useFullscreen()\n  const [width, elementRef] = useCalculatedWidth()\n\n  const fullscreenContextValue = useMemo(() => {\n    return {\n      width: expanded ? fullWidth : width,\n      height: expanded ? fullHeight : height,\n      expanded,\n      expand: zoomIn,\n      collapse: zoomOut,\n    }\n  }, [expanded, fullHeight, fullWidth, height, width, zoomIn, zoomOut])\n\n  return (\n    <ElementFullscreenContext.Provider value={fullscreenContextValue}>\n      <StyledFullScreenFrame\n        ref={elementRef}\n        isExpanded={expanded}\n        data-testid=\"stFullScreenFrame\"\n        theme={theme}\n      >\n        {children}\n      </StyledFullScreenFrame>\n    </ElementFullscreenContext.Provider>\n  )\n}\n\nexport default ElementFullscreenWrapper\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2025)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { ComponentType, ReactElement } from \"react\"\n\nimport hoistNonReactStatics from \"hoist-non-react-statics\"\n\nimport ElementFullscreenWrapper from \"~lib/components/shared/ElementFullscreen/ElementFullscreenWrapper\"\n\nfunction withFullScreenWrapper<P extends object>(\n  WrappedComponent: ComponentType<React.PropsWithChildren<P>>\n): ComponentType<React.PropsWithChildren<P>> {\n  const ComponentWithFullScreenWrapper = (props: P): ReactElement => {\n    return (\n      <ElementFullscreenWrapper>\n        <WrappedComponent {...props}></WrappedComponent>\n      </ElementFullscreenWrapper>\n    )\n  }\n  ComponentWithFullScreenWrapper.displayName = `withFullScreenWrapper(${\n    WrappedComponent.displayName || WrappedComponent.name\n  })`\n\n  // Static methods must be copied over\n  // https://en.reactjs.org/docs/higher-order-components.html#static-methods-must-be-copied-over\n  return hoistNonReactStatics(ComponentWithFullScreenWrapper, WrappedComponent)\n}\n\nexport default withFullScreenWrapper\n"],"names":["ElementFullscreenContext","createContext","displayName","StyledFullScreenFrame","_styled","target","theme","isExpanded","width","position","top","left","bottom","right","background","colors","bgColor","zIndex","zIndices","fullscreenWrapper","padding","spacing","md","paddingTop","sizes","fullScreenHeaderHeight","overflow","display","alignItems","justifyContent","useFullscreen","setFullScreen","useContext","LibContext","expanded","setExpanded","useState","fullHeight","fullWidth","useWindowDimensionsContext","setExpandedState","useCallback","zoomIn","document","body","style","zoomOut","controlKeys","event","keyCode","useEffect","addEventListener","removeEventListener","useMemo","ElementFullscreenWrapper","children","height","useEmotionTheme","elementRef","useCalculatedWidth","fullscreenContextValue","expand","collapse","jsx","withFullScreenWrapper","WrappedComponent","ComponentWithFullScreenWrapper","props","name","hoistNonReactStatics"],"mappings":"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"}