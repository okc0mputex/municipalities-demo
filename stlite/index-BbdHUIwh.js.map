{"version":3,"file":"index-BbdHUIwh.js","sources":["../../../node_modules/@emotion-icons/material-outlined/AttachFile/AttachFile.esm.js","../../../node_modules/@emotion-icons/material-rounded/Send/Send.esm.js","../../../streamlit/frontend/lib/src/components/widgets/ChatInput/fileUpload/styled-components.ts","../../../streamlit/frontend/lib/src/components/widgets/ChatInput/fileUpload/ChatFileUploadButton.tsx","../../../streamlit/frontend/lib/src/components/widgets/ChatInput/fileUpload/ChatFileUploadDropzone.tsx","../../../streamlit/frontend/lib/src/components/widgets/ChatInput/fileUpload/ChatUploadedFileIconTooltip.tsx","../../../streamlit/frontend/lib/src/components/widgets/ChatInput/fileUpload/ChatUploadedFile.tsx","../../../streamlit/frontend/lib/src/components/widgets/ChatInput/fileUpload/ChatUploadedFiles.tsx","../../../streamlit/frontend/lib/src/components/widgets/ChatInput/fileUpload/createDropHandler.ts","../../../streamlit/frontend/lib/src/components/widgets/ChatInput/fileUpload/createFileUploadHandler.ts","../../../streamlit/frontend/lib/src/components/widgets/ChatInput/styled-components.ts","../../../streamlit/frontend/lib/src/components/widgets/ChatInput/ChatInput.tsx"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport * as React from 'react';\nimport { EmotionIconBase } from '@emotion-icons/emotion-icon';\nexport var AttachFile = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var attrs = {\n    \"fill\": \"currentColor\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  };\n  return /*#__PURE__*/React.createElement(EmotionIconBase, _extends({\n    iconAttrs: attrs,\n    iconVerticalAlign: \"middle\",\n    iconViewBox: \"0 0 24 24\"\n  }, props, {\n    ref: ref\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    d: \"M0 0h24v24H0V0z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M16.5 6v11.5c0 2.21-1.79 4-4 4s-4-1.79-4-4V5a2.5 2.5 0 015 0v10.5c0 .55-.45 1-1 1s-1-.45-1-1V6H10v9.5a2.5 2.5 0 005 0V5c0-2.21-1.79-4-4-4S7 2.79 7 5v12.5c0 3.04 2.46 5.5 5.5 5.5s5.5-2.46 5.5-5.5V6h-1.5z\"\n  }));\n});\nAttachFile.displayName = 'AttachFile';\nexport var AttachFileDimensions = {\n  height: 24,\n  width: 24\n};","import _extends from \"@babel/runtime/helpers/extends\";\nimport * as React from 'react';\nimport { EmotionIconBase } from '@emotion-icons/emotion-icon';\nexport var Send = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var attrs = {\n    \"fill\": \"currentColor\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  };\n  return /*#__PURE__*/React.createElement(EmotionIconBase, _extends({\n    iconAttrs: attrs,\n    iconVerticalAlign: \"middle\",\n    iconViewBox: \"0 0 24 24\"\n  }, props, {\n    ref: ref\n  }), /*#__PURE__*/React.createElement(\"rect\", {\n    width: 24,\n    height: 24,\n    fill: \"none\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M3 5.51v3.71c0 .46.31.86.76.97L11 12l-7.24 1.81c-.45.11-.76.51-.76.97v3.71c0 .72.73 1.2 1.39.92l15.42-6.49c.82-.34.82-1.5 0-1.84L4.39 4.58C3.73 4.31 3 4.79 3 5.51z\"\n  }));\n});\nSend.displayName = 'Send';\nexport var SendDimensions = {\n  height: 24,\n  width: 24\n};","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2025)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport styled from \"@emotion/styled\"\n\nimport { FileStatus } from \"~lib/components/widgets/FileUploader/UploadFileInfo\"\n\nexport interface StyledChatFileUploadDropzoneProps {\n  height: string\n}\n\n// A transparent dropzone with a minimum height if chat input is short.\n// If chat input grows taller under multi-line, the dropzone will grow with it.\nexport const StyledChatFileUploadDropzone =\n  styled.div<StyledChatFileUploadDropzoneProps>(({ theme, height }) => ({\n    backgroundColor: theme.colors.transparent,\n    position: \"absolute\",\n    left: 0,\n    bottom: 0,\n    minHeight: `max(${theme.sizes.emptyDropdownHeight}, ${height})`,\n    width: \"100%\",\n    zIndex: theme.zIndices.priority,\n  }))\n\nexport interface StyledChatFileUploadDropzoneLabelProps {\n  height: string\n}\n\nexport const StyledChatFileUploadDropzoneLabel =\n  styled.div<StyledChatFileUploadDropzoneLabelProps>(({ theme, height }) => ({\n    border: `${theme.sizes.borderWidth} solid`,\n    borderColor: theme.colors.primary,\n    borderRadius: theme.radii.chatInput,\n    backgroundColor: theme.colors.secondaryBg,\n    color: theme.colors.primary,\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    height: height,\n    width: \"100%\",\n    fontWeight: theme.fontWeights.bold,\n  }))\n\nexport interface StyledFileUploadButtonContainerProps {\n  disabled: boolean\n}\n\nexport const StyledFileUploadButtonContainer =\n  styled.div<StyledFileUploadButtonContainerProps>(({ theme, disabled }) => ({\n    display: \"flex\",\n    alignItems: \"top\",\n    height: \"100%\",\n    // Negative margin to offset the parent border width when we align to top\n    marginTop: `-${theme.sizes.borderWidth}`,\n    cursor: disabled ? \"not-allowed\" : \"auto\",\n  }))\n\nexport interface StyledFileUploadButtonProps {\n  disabled: boolean\n}\n\nexport const StyledFileUploadButton = styled.div<StyledFileUploadButtonProps>(\n  ({ disabled }) => ({\n    pointerEvents: disabled ? \"none\" : \"auto\",\n  })\n)\n\nexport const StyledVerticalDivider = styled.div(({ theme }) => ({\n  // We need to use hard-coded in order to align the divider centered\n  // given the height of chat input and divider.\n  marginTop: \"0.625em\",\n  marginLeft: theme.spacing.sm,\n  height: theme.spacing.xl,\n  width: theme.sizes.borderWidth,\n  backgroundColor: theme.colors.fadedText20,\n}))\n\nexport const StyledChatUploadedFiles = styled.div(({ theme }) => ({\n  left: 0,\n  right: 0,\n  lineHeight: theme.lineHeights.tight,\n  paddingLeft: theme.spacing.sm,\n  paddingRight: theme.spacing.sm,\n  overflowX: \"auto\",\n}))\n\nexport const StyledUploadedChatFileList = styled.div({\n  display: \"flex\",\n})\n\nexport const StyledUploadedChatFileListItem = styled.div({\n  flex: \"0 0 auto\",\n})\n\nexport const StyledChatUploadedFile = styled.div(({ theme }) => ({\n  display: \"flex\",\n  alignItems: \"center\",\n  padding: theme.spacing.sm,\n  gap: theme.spacing.twoXS,\n}))\n\nexport const StyledChatUploadedFileIcon = styled.div(({ theme }) => ({\n  color: theme.colors.fadedText60,\n}))\n\nexport interface StyledChatUploadedFileStatusProps {\n  fileStatus: FileStatus\n}\n\nexport const StyledChatUploadedFileName =\n  styled.div<StyledChatUploadedFileStatusProps>(({ theme, fileStatus }) => ({\n    overflow: \"hidden\",\n    textOverflow: \"ellipsis\",\n    whiteSpace: \"nowrap\",\n    color:\n      fileStatus.type === \"uploaded\"\n        ? theme.colors.bodyText\n        : theme.colors.fadedText60,\n  }))\n\nexport const StyledChatUploadedFileSize = styled.div(({ theme }) => ({\n  marginRight: theme.spacing.md,\n  color: theme.colors.fadedText60,\n}))\n\nexport const StyledChatUploadedFileDeleteButton = styled.small(\n  ({ theme }) => ({\n    display: \"flex\",\n    alignItems: \"center\",\n    maxHeight: theme.sizes.smallElementHeight,\n    color: theme.colors.fadedText60,\n    \"& :hover\": {\n      color: theme.colors.bodyText,\n    },\n  })\n)\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2025)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { memo } from \"react\"\n\nimport { AttachFile } from \"@emotion-icons/material-outlined\"\n\nimport BaseButton, { BaseButtonKind } from \"~lib/components/shared/BaseButton\"\nimport Icon from \"~lib/components/shared/Icon\"\nimport { Placement } from \"~lib/components/shared/Tooltip\"\nimport TooltipIcon from \"~lib/components/shared/TooltipIcon\"\nimport { EmotionTheme } from \"~lib/theme\"\nimport { AcceptFileValue } from \"~lib/util/utils\"\n\nimport {\n  StyledFileUploadButton,\n  StyledFileUploadButtonContainer,\n  StyledVerticalDivider,\n} from \"./styled-components\"\n\nexport interface Props {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any -- TODO: Replace 'any' with a more specific type.\n  getRootProps: any\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any -- TODO: Replace 'any' with a more specific type.\n  getInputProps: any\n  acceptFile: AcceptFileValue\n  disabled: boolean\n  theme: EmotionTheme\n}\n\nconst ChatFileUploadButton = ({\n  getRootProps,\n  getInputProps,\n  acceptFile,\n  disabled,\n  theme,\n}: Props): React.ReactElement => (\n  <StyledFileUploadButtonContainer disabled={disabled}>\n    <StyledFileUploadButton\n      data-testid=\"stChatInputFileUploadButton\"\n      disabled={disabled}\n      {...getRootProps()}\n    >\n      <input {...getInputProps()} />\n      <TooltipIcon\n        content={`Upload or drag and drop ${\n          acceptFile === AcceptFileValue.Multiple ? \"files\" : \"a file\"\n        }`}\n        placement={Placement.TOP}\n        onMouseEnterDelay={500}\n      >\n        <BaseButton kind={BaseButtonKind.MINIMAL} disabled={disabled}>\n          <Icon\n            content={AttachFile}\n            size=\"lg\"\n            color={\n              disabled ? theme.colors.fadedText40 : theme.colors.fadedText60\n            }\n          />\n        </BaseButton>\n      </TooltipIcon>\n    </StyledFileUploadButton>\n    <StyledVerticalDivider />\n  </StyledFileUploadButtonContainer>\n)\n\nexport default memo(ChatFileUploadButton)\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2025)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { memo } from \"react\"\n\nimport { AcceptFileValue } from \"~lib/util/utils\"\n\nimport {\n  StyledChatFileUploadDropzone,\n  StyledChatFileUploadDropzoneLabel,\n} from \"./styled-components\"\n\nexport interface Props {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any -- TODO: Replace 'any' with a more specific type.\n  getRootProps: any\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any -- TODO: Replace 'any' with a more specific type.\n  getInputProps: any\n  acceptFile: AcceptFileValue\n  inputHeight: string\n}\n\nconst ChatFileUploadDropzone = ({\n  getRootProps,\n  getInputProps,\n  acceptFile,\n  inputHeight,\n}: Props): React.ReactElement => (\n  <>\n    <StyledChatFileUploadDropzone height={inputHeight} {...getRootProps()}>\n      <input {...getInputProps()} />\n    </StyledChatFileUploadDropzone>\n    <StyledChatFileUploadDropzoneLabel height={inputHeight}>\n      {`Drag and drop ${\n        acceptFile === AcceptFileValue.Multiple ? \"files\" : \"a file\"\n      } here`}\n    </StyledChatFileUploadDropzoneLabel>\n  </>\n)\n\nexport default memo(ChatFileUploadDropzone)\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2025)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { ReactElement } from \"react\"\n\nimport Tooltip, { Placement } from \"~lib/components/shared/Tooltip\"\nimport { useEmotionTheme } from \"~lib/hooks/useEmotionTheme\"\n\ninterface Props {\n  children: ReactElement\n  content: string\n}\n\nexport function ChatUploadedFileIconTooltip({\n  children,\n  content,\n}: Props): ReactElement {\n  const theme = useEmotionTheme()\n  return (\n    <Tooltip\n      content={content}\n      placement={Placement.TOP}\n      overrides={{\n        Body: {\n          style: {\n            top: `-${theme.sizes.minElementHeight}`,\n          },\n        },\n      }}\n    >\n      {children}\n    </Tooltip>\n  )\n}\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2025)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { FC, memo } from \"react\"\n\nimport {\n  Clear,\n  ErrorOutline,\n  InsertDriveFile,\n} from \"@emotion-icons/material-outlined\"\n\nimport BaseButton, { BaseButtonKind } from \"~lib/components/shared/BaseButton\"\nimport Icon, { StyledSpinnerIcon } from \"~lib/components/shared/Icon\"\nimport { UploadFileInfo } from \"~lib/components/widgets/FileUploader/UploadFileInfo\"\nimport { useEmotionTheme } from \"~lib/hooks/useEmotionTheme\"\nimport { assertNever } from \"~lib/util/assertNever\"\nimport { FileSize, getSizeDisplay } from \"~lib/util/FileHelper\"\n\nimport { ChatUploadedFileIconTooltip } from \"./ChatUploadedFileIconTooltip\"\nimport {\n  StyledChatUploadedFile,\n  StyledChatUploadedFileDeleteButton,\n  StyledChatUploadedFileIcon,\n  StyledChatUploadedFileName,\n  StyledChatUploadedFileSize,\n} from \"./styled-components\"\n\nexport interface Props {\n  fileInfo: UploadFileInfo\n  onDelete: (id: number) => void\n}\n\nexport interface ChatUploadedFileIconProps {\n  fileInfo: UploadFileInfo\n}\n\nexport const ChatUploadedFileIcon: FC<ChatUploadedFileIconProps> = ({\n  fileInfo,\n}) => {\n  const theme = useEmotionTheme()\n  const { type } = fileInfo.status\n\n  switch (type) {\n    case \"uploading\":\n      return (\n        <StyledSpinnerIcon\n          data-testid=\"stChatInputFileIconSpinner\"\n          size=\"lg\"\n          margin=\"0\"\n          padding=\"0\"\n        />\n      )\n    case \"error\":\n      return (\n        <ChatUploadedFileIconTooltip content={fileInfo.status.errorMessage}>\n          <Icon color={theme.colors.red} content={ErrorOutline} size=\"lg\" />\n        </ChatUploadedFileIconTooltip>\n      )\n    case \"uploaded\":\n      return <Icon content={InsertDriveFile} size=\"lg\" />\n    default:\n      assertNever(type)\n      return null\n  }\n}\n\nconst ChatUploadedFile = ({\n  fileInfo,\n  onDelete,\n}: Props): React.ReactElement => (\n  <StyledChatUploadedFile\n    className=\"stChatInputFile\"\n    data-testid=\"stChatInputFile\"\n  >\n    <StyledChatUploadedFileIcon>\n      <ChatUploadedFileIcon fileInfo={fileInfo} />\n    </StyledChatUploadedFileIcon>\n    <StyledChatUploadedFileName\n      className=\"stChatInputFileName\"\n      data-testid=\"stChatInputFileName\"\n      title={fileInfo.name}\n      fileStatus={fileInfo.status}\n    >\n      {fileInfo.name}\n    </StyledChatUploadedFileName>\n    <StyledChatUploadedFileSize>\n      {getSizeDisplay(fileInfo.size, FileSize.Byte)}\n    </StyledChatUploadedFileSize>\n    <StyledChatUploadedFileDeleteButton data-testid=\"stChatInputDeleteBtn\">\n      <BaseButton\n        onClick={() => onDelete(fileInfo.id)}\n        kind={BaseButtonKind.MINIMAL}\n      >\n        <Icon content={Clear} size=\"lg\" />\n      </BaseButton>\n    </StyledChatUploadedFileDeleteButton>\n  </StyledChatUploadedFile>\n)\n\nexport default memo(ChatUploadedFile)\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2025)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { memo, ReactElement } from \"react\"\n\nimport { UploadFileInfo } from \"~lib/components/widgets/FileUploader/UploadFileInfo\"\n\nimport ChatUploadedFile from \"./ChatUploadedFile\"\nimport {\n  StyledChatUploadedFiles,\n  StyledUploadedChatFileList,\n  StyledUploadedChatFileListItem,\n} from \"./styled-components\"\n\nexport interface Props {\n  items: UploadFileInfo[]\n  onDelete: (id: number) => void\n}\n\nconst ChatUploadedFiles = ({ items, onDelete }: Props): ReactElement => (\n  <StyledChatUploadedFiles data-testid=\"stChatUploadedFiles\">\n    <StyledUploadedChatFileList>\n      {items.map(file => (\n        <StyledUploadedChatFileListItem key={file.id}>\n          <ChatUploadedFile fileInfo={file} onDelete={onDelete} />\n        </StyledUploadedChatFileListItem>\n      ))}\n    </StyledUploadedChatFileList>\n  </StyledChatUploadedFiles>\n)\n\nexport default memo(ChatUploadedFiles)\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2025)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport zip from \"lodash/zip\"\nimport { ErrorCode as FileErrorCode, FileRejection } from \"react-dropzone\"\n\nimport { FileURLs as FileURLsProto, IFileURLs } from \"@streamlit/protobuf\"\n\nimport { UploadFileInfo } from \"~lib/components/widgets/FileUploader/UploadFileInfo\"\nimport { FileUploadClient } from \"~lib/FileUploadClient\"\nimport { getRejectedFileInfo } from \"~lib/util/FileHelper\"\n\ninterface CreateDropHandlerParams {\n  acceptMultipleFiles: boolean\n  maxFileSize: number\n  uploadClient: FileUploadClient\n  uploadFile: (fileURLs: FileURLsProto, file: File) => void\n  addFiles: (files: UploadFileInfo[]) => void\n  getNextLocalFileId: () => number\n  deleteExistingFiles: () => void\n  onUploadComplete: () => void\n}\n\nexport const createDropHandler =\n  ({\n    acceptMultipleFiles,\n    maxFileSize,\n    uploadClient,\n    uploadFile,\n    addFiles,\n    getNextLocalFileId,\n    deleteExistingFiles,\n    onUploadComplete,\n  }: CreateDropHandlerParams) =>\n  (acceptedFiles: File[], rejectedFiles: FileRejection[]): void => {\n    // If only single file upload is allowed but multiple were dropped/selected,\n    // all files will be rejected by default. In this case, we take the first\n    // valid file into acceptedFiles, and reject the rest.\n    if (\n      !acceptMultipleFiles &&\n      acceptedFiles.length === 0 &&\n      rejectedFiles.length > 1\n    ) {\n      const firstFileIndex = rejectedFiles.findIndex(\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-enum-comparison -- TODO: Fix this\n        file => file.errors?.[0].code === FileErrorCode.TooManyFiles\n      )\n\n      if (firstFileIndex >= 0) {\n        acceptedFiles.push(rejectedFiles[firstFileIndex].file)\n        rejectedFiles.splice(firstFileIndex, 1)\n      }\n    }\n\n    if (!acceptMultipleFiles && acceptedFiles.length > 0) {\n      deleteExistingFiles()\n    }\n\n    uploadClient\n      .fetchFileURLs(acceptedFiles)\n      .then((fileURLsArray: IFileURLs[]) => {\n        zip(fileURLsArray, acceptedFiles).forEach(\n          ([fileURLs, acceptedFile]) => {\n            uploadFile(fileURLs as FileURLsProto, acceptedFile as File)\n          }\n        )\n      })\n      .catch((errorMessage: string) => {\n        addFiles(\n          acceptedFiles.map(f => {\n            return new UploadFileInfo(f.name, f.size, getNextLocalFileId(), {\n              type: \"error\",\n              errorMessage,\n            })\n          })\n        )\n      })\n\n    // Create an UploadFileInfo for each of our rejected files, and add them to\n    // our state.\n    if (rejectedFiles.length > 0) {\n      const rejectedInfos = rejectedFiles.map(rejected =>\n        getRejectedFileInfo(rejected, getNextLocalFileId(), maxFileSize)\n      )\n      addFiles(rejectedInfos)\n    }\n\n    onUploadComplete()\n  }\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2025)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport axios from \"axios\"\n\nimport { IFileURLs } from \"@streamlit/protobuf\"\n\nimport { UploadFileInfo } from \"~lib/components/widgets/FileUploader/UploadFileInfo\"\nimport { FileUploadClient } from \"~lib/FileUploadClient\"\nimport { WidgetInfo } from \"~lib/WidgetStateManager\"\n\ninterface CreateUploadFileParams {\n  getNextLocalFileId: () => number\n  addFiles: (files: UploadFileInfo[]) => void\n  updateFile: (id: number, fileInfo: UploadFileInfo) => void\n  uploadClient: FileUploadClient\n  element: WidgetInfo\n  onUploadProgress: (e: ProgressEvent, id: number) => void\n  onUploadComplete: (id: number, fileURLs: IFileURLs) => void\n}\n\nexport const createUploadFileHandler =\n  ({\n    getNextLocalFileId,\n    addFiles,\n    updateFile,\n    uploadClient,\n    element,\n    onUploadProgress,\n    onUploadComplete,\n  }: CreateUploadFileParams) =>\n  (fileURLs: IFileURLs, file: File): void => {\n    // Create an UploadFileInfo for this file and add it to our state.\n    const cancelToken = axios.CancelToken.source()\n    const uploadingFileInfo = new UploadFileInfo(\n      file.name,\n      file.size,\n      getNextLocalFileId(),\n      {\n        type: \"uploading\",\n        cancelToken,\n        progress: 1,\n      }\n    )\n    addFiles([uploadingFileInfo])\n\n    uploadClient\n      .uploadFile(\n        {\n          formId: \"\", // TODO[kajarnec] fix this probably with uploadFile refactoring\n          ...element,\n        },\n        fileURLs.uploadUrl as string,\n        file,\n        e => onUploadProgress(e, uploadingFileInfo.id),\n        cancelToken.token\n      )\n      .then(() => onUploadComplete(uploadingFileInfo.id, fileURLs))\n      .catch(err => {\n        // If this was a cancel error, we don't show the user an error -\n        // the cancellation was in response to an action they took.\n        if (!axios.isCancel(err)) {\n          updateFile(\n            uploadingFileInfo.id,\n            uploadingFileInfo.setStatus({\n              type: \"error\",\n              errorMessage: err ? err.toString() : \"Unknown error\",\n            })\n          )\n        }\n      })\n  }\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2025)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport styled from \"@emotion/styled\"\n\nimport { hasLightBackgroundColor } from \"~lib/theme\"\n\nexport const StyledChatInputContainer = styled.div`\n  border: none;\n  position: relative;\n  display: flex;\n`\n\nexport interface StyledChatInputProps {\n  extended: boolean\n}\n\nexport const StyledChatInput = styled.div<StyledChatInputProps>(\n  ({ theme, extended }) => ({\n    border: `${theme.sizes.borderWidth} solid`,\n    borderColor: theme.colors.widgetBorderColor ?? theme.colors.transparent,\n    borderRadius: theme.radii.chatInput,\n    backgroundColor: theme.colors.secondaryBg,\n    position: \"relative\",\n    flexGrow: 1,\n    display: \"flex\",\n    alignItems: \"center\",\n    paddingLeft: theme.spacing.lg,\n    maxHeight: extended ? \"none\" : theme.sizes.minElementHeight,\n    gap: theme.spacing.sm,\n    overflow: \"hidden\",\n\n    \":focus-within\": {\n      borderColor: theme.colors.primary,\n    },\n  })\n)\n\ninterface StyledSendIconButtonProps {\n  disabled: boolean\n  extended: boolean\n}\n\nexport const StyledSendIconButton = styled.button<StyledSendIconButtonProps>(\n  ({ theme, disabled, extended }) => {\n    const lightTheme = hasLightBackgroundColor(theme)\n    const [cleanIconColor, dirtyIconColor] = lightTheme\n      ? [theme.colors.gray60, theme.colors.gray80]\n      : [theme.colors.gray80, theme.colors.gray40]\n    return {\n      border: \"none\",\n      backgroundColor: theme.colors.transparent,\n      borderTopRightRadius: extended ? \"0\" : theme.radii.chatInput,\n      borderTopLeftRadius: extended ? theme.radii.default : \"0\",\n      borderBottomRightRadius: theme.radii.chatInput,\n      display: \"inline-flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      lineHeight: theme.lineHeights.none,\n      margin: theme.spacing.none,\n      padding: theme.spacing.sm,\n      color: disabled ? cleanIconColor : dirtyIconColor,\n      pointerEvents: \"auto\",\n      \"&:focus\": {\n        outline: \"none\",\n      },\n      \":focus\": {\n        outline: \"none\",\n      },\n      \"&:focus-visible\": {\n        backgroundColor: lightTheme\n          ? theme.colors.gray10\n          : theme.colors.gray90,\n      },\n      \"&:hover\": {\n        color: theme.colors.primary,\n      },\n      \"&:disabled, &:disabled:hover, &:disabled:active\": {\n        backgroundColor: theme.colors.transparent,\n        borderColor: theme.colors.transparent,\n        color: theme.colors.gray,\n        cursor: \"not-allowed\",\n      },\n    }\n  }\n)\n\nexport const StyledSendIconButtonContainer = styled.div(({ theme }) => ({\n  display: \"flex\",\n  alignItems: \"flex-end\",\n  height: \"100%\",\n  position: \"absolute\",\n  right: 0,\n  // Negative margin to offset the parent border width when we align button to end\n  marginBottom: `-${theme.sizes.borderWidth}`,\n  pointerEvents: \"none\",\n}))\n\nexport const StyledInputInstructionsContainer = styled.div(({ theme }) => ({\n  position: \"absolute\",\n  bottom: \"0px\",\n  // Calculate the right padding to account for the send icon (iconSizes.xl + 2 * spacing.sm)\n  // and some additional margin between the icon and the text (spacing.sm).\n  right: `calc(${theme.iconSizes.xl} + 2 * ${theme.spacing.sm} + ${theme.spacing.sm})`,\n}))\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2025)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, {\n  ChangeEvent,\n  KeyboardEvent,\n  memo,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\"\n\nimport { Send } from \"@emotion-icons/material-rounded\"\nimport { Textarea as UITextArea } from \"baseui/textarea\"\nimport { useDropzone } from \"react-dropzone\"\n\nimport { useWindowDimensionsContext } from \"@streamlit/lib\"\nimport {\n  ChatInput as ChatInputProto,\n  FileUploaderState as FileUploaderStateProto,\n  IChatInputValue,\n  IFileURLs,\n  UploadedFileInfo as UploadedFileInfoProto,\n} from \"@streamlit/protobuf\"\n\nimport Icon from \"~lib/components/shared/Icon\"\nimport InputInstructions from \"~lib/components/shared/InputInstructions/InputInstructions\"\nimport {\n  UploadedStatus,\n  UploadFileInfo,\n} from \"~lib/components/widgets/FileUploader/UploadFileInfo\"\nimport { getAccept } from \"~lib/components/widgets/FileUploader/utils\"\nimport { FileUploadClient } from \"~lib/FileUploadClient\"\nimport { useCalculatedWidth } from \"~lib/hooks/useCalculatedWidth\"\nimport { useEmotionTheme } from \"~lib/hooks/useEmotionTheme\"\nimport { useTextInputAutoExpand } from \"~lib/hooks/useTextInputAutoExpand\"\nimport { FileSize, sizeConverter } from \"~lib/util/FileHelper\"\nimport { isEnterKeyPressed } from \"~lib/util/inputUtils\"\nimport {\n  AcceptFileValue,\n  chatInputAcceptFileProtoValueToEnum,\n  isNullOrUndefined,\n} from \"~lib/util/utils\"\nimport { WidgetStateManager } from \"~lib/WidgetStateManager\"\n\nimport ChatFileUploadButton from \"./fileUpload/ChatFileUploadButton\"\nimport ChatFileUploadDropzone from \"./fileUpload/ChatFileUploadDropzone\"\nimport ChatUploadedFiles from \"./fileUpload/ChatUploadedFiles\"\nimport { createDropHandler } from \"./fileUpload/createDropHandler\"\nimport { createUploadFileHandler } from \"./fileUpload/createFileUploadHandler\"\nimport {\n  StyledChatInput,\n  StyledChatInputContainer,\n  StyledInputInstructionsContainer,\n  StyledSendIconButton,\n  StyledSendIconButtonContainer,\n} from \"./styled-components\"\n\nexport interface Props {\n  disabled: boolean\n  element: ChatInputProto\n  widgetMgr: WidgetStateManager\n  uploadClient: FileUploadClient\n  fragmentId?: string\n}\n\nconst updateFile = (\n  id: number,\n  fileInfo: UploadFileInfo,\n  currentFiles: UploadFileInfo[]\n): UploadFileInfo[] => currentFiles.map(f => (f.id === id ? fileInfo : f))\n\nconst getFile = (\n  localFileId: number,\n  currentFiles: UploadFileInfo[]\n): UploadFileInfo | undefined => currentFiles.find(f => f.id === localFileId)\n\nfunction ChatInput({\n  disabled,\n  element,\n  widgetMgr,\n  fragmentId,\n  uploadClient,\n}: Props): React.ReactElement {\n  const theme = useEmotionTheme()\n\n  const { placeholder, maxChars } = element\n\n  const counterRef = useRef(0)\n  const chatInputRef = useRef<HTMLTextAreaElement>(null)\n\n  const [width, elementRef] = useCalculatedWidth()\n  const { innerWidth, innerHeight } = useWindowDimensionsContext()\n\n  // The value specified by the user via the UI. If the user didn't touch this widget's UI, the default value is used.\n  const [value, setValue] = useState(element.default)\n  const [files, setFiles] = useState<UploadFileInfo[]>([])\n  const [fileDragged, setFileDragged] = useState(false)\n\n  const autoExpand = useTextInputAutoExpand({\n    textareaRef: chatInputRef,\n    dependencies: [placeholder],\n  })\n\n  /**\n   * @returns True if the user-specified state.value has not yet been synced to\n   * the WidgetStateManager.\n   */\n  const dirty = useMemo(() => {\n    if (files.some(f => f.status.type === \"uploading\")) {\n      return false\n    }\n\n    return value !== \"\" || files.length > 0\n  }, [files, value])\n\n  const acceptFile = chatInputAcceptFileProtoValueToEnum(element.acceptFile)\n  const maxFileSize = sizeConverter(\n    element.maxUploadSizeMb,\n    FileSize.Megabyte,\n    FileSize.Byte\n  )\n\n  const addFiles = useCallback(\n    (filesToAdd: UploadFileInfo[]): void =>\n      setFiles(currentFiles => [...currentFiles, ...filesToAdd]),\n    []\n  )\n\n  const deleteFile = useCallback(\n    (fileId: number): void => {\n      setFiles(prevFiles => {\n        const file = getFile(fileId, prevFiles)\n        if (isNullOrUndefined(file)) {\n          return prevFiles\n        }\n\n        if (file.status.type === \"uploading\") {\n          // Cancel request as the file hasn't been uploaded.\n          // However, it may have been received by the server so we'd still\n          // send out a request to delete it.\n          file.status.cancelToken.cancel()\n        }\n\n        if (\n          file.status.type === \"uploaded\" &&\n          file.status.fileUrls.deleteUrl\n        ) {\n          // eslint-disable-next-line @typescript-eslint/no-floating-promises -- TODO: Fix this\n          uploadClient.deleteFile(file.status.fileUrls.deleteUrl)\n        }\n\n        return prevFiles.filter(fileArg => fileArg.id !== fileId)\n      })\n    },\n    [uploadClient]\n  )\n\n  const createChatInputWidgetFilesValue = (): FileUploaderStateProto => {\n    const uploadedFileInfo: UploadedFileInfoProto[] = files\n      .filter(f => f.status.type === \"uploaded\")\n      .map(f => {\n        const { name, size, status } = f\n        const { fileId, fileUrls } = status as UploadedStatus\n        return new UploadedFileInfoProto({\n          fileId,\n          fileUrls,\n          name,\n          size,\n        })\n      })\n\n    return new FileUploaderStateProto({ uploadedFileInfo })\n  }\n\n  const getNextLocalFileId = (): number => {\n    return counterRef.current++\n  }\n\n  const dropHandler = createDropHandler({\n    acceptMultipleFiles: acceptFile === AcceptFileValue.Multiple,\n    maxFileSize: maxFileSize,\n    uploadClient: uploadClient,\n    uploadFile: createUploadFileHandler({\n      getNextLocalFileId,\n      addFiles,\n      updateFile: (id: number, fileInfo: UploadFileInfo) => {\n        setFiles(prevFiles => updateFile(id, fileInfo, prevFiles))\n      },\n      uploadClient,\n      element,\n      onUploadProgress: (e: ProgressEvent, fileId: number) => {\n        setFiles(prevFiles => {\n          const file = getFile(fileId, prevFiles)\n          if (isNullOrUndefined(file) || file.status.type !== \"uploading\") {\n            return prevFiles\n          }\n\n          const newProgress = Math.round((e.loaded * 100) / e.total)\n          if (file.status.progress === newProgress) {\n            return prevFiles\n          }\n\n          return updateFile(\n            fileId,\n            file.setStatus({\n              type: \"uploading\",\n              cancelToken: file.status.cancelToken,\n              progress: newProgress,\n            }),\n            prevFiles\n          )\n        })\n      },\n      onUploadComplete: (id: number, fileUrls: IFileURLs) => {\n        setFiles(prevFiles => {\n          const curFile = getFile(id, prevFiles)\n          if (\n            isNullOrUndefined(curFile) ||\n            curFile.status.type !== \"uploading\"\n          ) {\n            // The file may have been canceled right before the upload\n            // completed. In this case, we just bail.\n            return prevFiles\n          }\n\n          return updateFile(\n            curFile.id,\n            curFile.setStatus({\n              type: \"uploaded\",\n              fileId: fileUrls.fileId as string,\n              fileUrls,\n            }),\n            prevFiles\n          )\n        })\n      },\n    }),\n    addFiles,\n    getNextLocalFileId,\n    deleteExistingFiles: () => files.forEach(f => deleteFile(f.id)),\n    onUploadComplete: () => {\n      if (chatInputRef.current) {\n        chatInputRef.current.focus()\n      }\n    },\n  })\n\n  const { getRootProps, getInputProps } = useDropzone({\n    onDrop: dropHandler,\n    multiple: acceptFile === AcceptFileValue.Multiple,\n    accept: getAccept(element.fileType),\n    maxSize: maxFileSize,\n  })\n\n  const handleSubmit = (): void => {\n    // We want the chat input to always be in focus\n    // even if the user clicks the submit button\n    if (chatInputRef.current) {\n      chatInputRef.current.focus()\n    }\n\n    if (!dirty || disabled) {\n      return\n    }\n\n    const composedValue: IChatInputValue = {\n      data: value,\n      fileUploaderState: createChatInputWidgetFilesValue(),\n    }\n\n    widgetMgr.setChatInputValue(\n      element,\n      composedValue,\n      { fromUi: true },\n      fragmentId\n    )\n    setFiles([])\n    setValue(\"\")\n  }\n\n  const handleKeyDown = (e: KeyboardEvent<HTMLTextAreaElement>): void => {\n    const { metaKey, ctrlKey, shiftKey } = e\n    const shouldSubmit =\n      isEnterKeyPressed(e) && !shiftKey && !ctrlKey && !metaKey\n\n    if (shouldSubmit) {\n      e.preventDefault()\n\n      handleSubmit()\n    }\n  }\n\n  const handleChange = (e: ChangeEvent<HTMLTextAreaElement>): void => {\n    const { value: targetValue } = e.target\n\n    if (maxChars !== 0 && targetValue.length > maxChars) {\n      return\n    }\n\n    setValue(targetValue)\n    autoExpand.updateScrollHeight()\n  }\n\n  useEffect(() => {\n    if (element.setValue) {\n      // We are intentionally setting this to avoid regularly calling this effect.\n      // TODO: Update to match React best practices\n      // eslint-disable-next-line react-hooks/react-compiler\n      element.setValue = false\n      const val = element.value || \"\"\n      setValue(val)\n    }\n  }, [element])\n\n  useEffect(() => {\n    const handleDragEnter = (event: DragEvent): void => {\n      event.preventDefault()\n      event.stopPropagation()\n      if (!fileDragged && event.dataTransfer?.types.includes(\"Files\")) {\n        setFileDragged(true)\n      }\n    }\n\n    const handleDragLeave = (event: DragEvent): void => {\n      event.preventDefault()\n      event.stopPropagation()\n      if (fileDragged) {\n        // This check prevents the dropzone from flickering since the dragleave\n        // event could fire when user is dragging within the window\n        if (\n          (event.clientX <= 0 && event.clientY <= 0) ||\n          (event.clientX >= innerWidth && event.clientY >= innerHeight)\n        ) {\n          setFileDragged(false)\n        }\n      }\n    }\n\n    const handleDrop = (event: DragEvent): void => {\n      event.preventDefault()\n      event.stopPropagation()\n      if (fileDragged) {\n        setFileDragged(false)\n      }\n    }\n\n    window.addEventListener(\"dragover\", handleDragEnter)\n    window.addEventListener(\"drop\", handleDrop)\n    window.addEventListener(\"dragleave\", handleDragLeave)\n\n    return () => {\n      window.removeEventListener(\"dragover\", handleDragEnter)\n      window.removeEventListener(\"drop\", handleDrop)\n      window.removeEventListener(\"dragleave\", handleDragLeave)\n    }\n  }, [fileDragged, innerWidth, innerHeight])\n\n  const showDropzone = acceptFile !== AcceptFileValue.None && fileDragged\n\n  return (\n    <>\n      {acceptFile === AcceptFileValue.None ? null : (\n        <ChatUploadedFiles items={[...files]} onDelete={deleteFile} />\n      )}\n      <StyledChatInputContainer\n        className=\"stChatInput\"\n        data-testid=\"stChatInput\"\n        ref={elementRef}\n      >\n        {showDropzone ? (\n          <ChatFileUploadDropzone\n            getRootProps={getRootProps}\n            getInputProps={getInputProps}\n            acceptFile={acceptFile}\n            inputHeight={autoExpand.height}\n          />\n        ) : (\n          <StyledChatInput extended={autoExpand.isExtended}>\n            {acceptFile === AcceptFileValue.None ? null : (\n              <ChatFileUploadButton\n                getRootProps={getRootProps}\n                getInputProps={getInputProps}\n                acceptFile={acceptFile}\n                disabled={disabled}\n                theme={theme}\n              />\n            )}\n            <UITextArea\n              inputRef={chatInputRef}\n              value={value}\n              placeholder={placeholder}\n              onChange={handleChange}\n              onKeyDown={handleKeyDown}\n              aria-label={placeholder}\n              disabled={disabled}\n              rows={1}\n              overrides={{\n                Root: {\n                  style: {\n                    minHeight: theme.sizes.minElementHeight,\n                    outline: \"none\",\n                    borderLeftWidth: \"0\",\n                    borderRightWidth: \"0\",\n                    borderTopWidth: \"0\",\n                    borderBottomWidth: \"0\",\n                    borderTopLeftRadius: \"0\",\n                    borderTopRightRadius: \"0\",\n                    borderBottomRightRadius: \"0\",\n                    borderBottomLeftRadius: \"0\",\n                  },\n                },\n                Input: {\n                  props: {\n                    \"data-testid\": \"stChatInputTextArea\",\n                  },\n                  style: {\n                    fontWeight: theme.fontWeights.normal,\n                    lineHeight: theme.lineHeights.inputWidget,\n                    \"::placeholder\": {\n                      color: theme.colors.fadedText60,\n                    },\n                    height: autoExpand.height,\n                    maxHeight: autoExpand.maxHeight,\n                    // Baseweb requires long-hand props, short-hand leads to weird bugs & warnings.\n                    paddingLeft: theme.spacing.none,\n                    paddingBottom: theme.spacing.sm,\n                    paddingTop: theme.spacing.sm,\n                    // Calculate the right padding to account for the send icon (iconSizes.xl + 2 * spacing.sm)\n                    // and some additional margin between the icon and the text (spacing.sm).\n                    paddingRight: `calc(${theme.iconSizes.xl} + 2 * ${theme.spacing.sm} + ${theme.spacing.sm})`,\n                  },\n                },\n              }}\n            />\n            {/* Hide the character limit in small widget sizes */}\n            {width > theme.breakpoints.hideWidgetDetails && (\n              <StyledInputInstructionsContainer>\n                <InputInstructions\n                  dirty={dirty}\n                  value={value}\n                  maxLength={maxChars}\n                  type=\"chat\"\n                  // Chat Input are not able to be used in forms\n                  inForm={false}\n                />\n              </StyledInputInstructionsContainer>\n            )}\n            <StyledSendIconButtonContainer>\n              <StyledSendIconButton\n                onClick={handleSubmit}\n                disabled={!dirty || disabled}\n                extended={autoExpand.isExtended}\n                data-testid=\"stChatInputSubmitButton\"\n              >\n                <Icon content={Send} size=\"xl\" color=\"inherit\" />\n              </StyledSendIconButton>\n            </StyledSendIconButtonContainer>\n          </StyledChatInput>\n        )}\n      </StyledChatInputContainer>\n    </>\n  )\n}\n\nexport default memo(ChatInput)\n"],"names":["AttachFile","React.forwardRef","props","ref","attrs","React.createElement","EmotionIconBase","_extends","Send","StyledChatFileUploadDropzone","_styled","target","theme","height","backgroundColor","colors","transparent","position","left","bottom","minHeight","sizes","emptyDropdownHeight","width","zIndex","zIndices","priority","StyledChatFileUploadDropzoneLabel","border","borderWidth","borderColor","primary","borderRadius","radii","chatInput","secondaryBg","color","display","alignItems","justifyContent","fontWeight","fontWeights","bold","StyledFileUploadButtonContainer","disabled","marginTop","cursor","StyledFileUploadButton","pointerEvents","StyledVerticalDivider","marginLeft","spacing","sm","xl","fadedText20","StyledChatUploadedFiles","right","lineHeight","lineHeights","tight","paddingLeft","paddingRight","overflowX","StyledUploadedChatFileList","name","styles","StyledUploadedChatFileListItem","StyledChatUploadedFile","padding","gap","twoXS","StyledChatUploadedFileIcon","fadedText60","StyledChatUploadedFileName","fileStatus","overflow","textOverflow","whiteSpace","type","bodyText","StyledChatUploadedFileSize","marginRight","md","StyledChatUploadedFileDeleteButton","maxHeight","smallElementHeight","ChatFileUploadButton","getRootProps","getInputProps","acceptFile","jsxs","jsx","TooltipIcon","AcceptFileValue","Multiple","Placement","TOP","BaseButton","BaseButtonKind","MINIMAL","Icon","fadedText40","ChatFileUploadButton$1","memo","ChatFileUploadDropzone","inputHeight","Fragment","ChatFileUploadDropzone$1","ChatUploadedFileIconTooltip","children","content","useEmotionTheme","Tooltip","Body","style","top","minElementHeight","ChatUploadedFileIcon","fileInfo","status","StyledSpinnerIcon","errorMessage","red","ErrorOutline","InsertDriveFile","assertNever","ChatUploadedFile","onDelete","getSizeDisplay","size","FileSize","Byte","id","Clear","ChatUploadedFile$1","ChatUploadedFiles","items","map","file","ChatUploadedFiles$1","createDropHandler","acceptMultipleFiles","maxFileSize","uploadClient","uploadFile","addFiles","getNextLocalFileId","deleteExistingFiles","onUploadComplete","acceptedFiles","rejectedFiles","length","firstFileIndex","findIndex","errors","code","FileErrorCode","TooManyFiles","push","splice","fetchFileURLs","then","fileURLsArray","zip","forEach","fileURLs","acceptedFile","catch","f","UploadFileInfo","rejectedInfos","rejected","getRejectedFileInfo","createUploadFileHandler","updateFile","element","onUploadProgress","cancelToken","axios","CancelToken","source","uploadingFileInfo","progress","formId","uploadUrl","e","token","err","isCancel","setStatus","toString","StyledChatInputContainer","StyledChatInput","extended","widgetBorderColor","flexGrow","lg","StyledSendIconButton","lightTheme","hasLightBackgroundColor","cleanIconColor","dirtyIconColor","gray60","gray80","gray40","borderTopRightRadius","borderTopLeftRadius","default","borderBottomRightRadius","none","margin","outline","gray10","gray90","gray","StyledSendIconButtonContainer","marginBottom","StyledInputInstructionsContainer","iconSizes","currentFiles","getFile","localFileId","find","ChatInput","widgetMgr","fragmentId","placeholder","maxChars","counterRef","useRef","chatInputRef","elementRef","useCalculatedWidth","innerWidth","innerHeight","useWindowDimensionsContext","value","setValue","useState","files","setFiles","fileDragged","setFileDragged","autoExpand","useTextInputAutoExpand","textareaRef","dependencies","dirty","useMemo","some","chatInputAcceptFileProtoValueToEnum","sizeConverter","maxUploadSizeMb","Megabyte","useCallback","filesToAdd","deleteFile","fileId","prevFiles","isNullOrUndefined","cancel","fileUrls","deleteUrl","filter","fileArg","createChatInputWidgetFilesValue","uploadedFileInfo","UploadedFileInfoProto","FileUploaderStateProto","current","dropHandler","newProgress","Math","round","loaded","total","curFile","focus","useDropzone","onDrop","multiple","accept","getAccept","fileType","maxSize","handleSubmit","composedValue","data","fileUploaderState","setChatInputValue","fromUi","handleKeyDown","metaKey","ctrlKey","shiftKey","isEnterKeyPressed","preventDefault","handleChange","targetValue","updateScrollHeight","useEffect","val","handleDragEnter","event","stopPropagation","dataTransfer","types","includes","handleDragLeave","clientX","clientY","handleDrop","window","addEventListener","removeEventListener","showDropzone","None","isExtended","UITextArea","Root","borderLeftWidth","borderRightWidth","borderTopWidth","borderBottomWidth","borderBottomLeftRadius","Input","normal","inputWidget","paddingBottom","paddingTop","breakpoints","hideWidgetDetails","InputInstructions","ChatInput$1"],"mappings":"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","x_google_ignoreList":[0,1]}