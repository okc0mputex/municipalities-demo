{"version":3,"file":"UploadFileInfo-B5SttewO.js","sources":["../../../streamlit/frontend/lib/src/components/widgets/FileUploader/UploadFileInfo.ts"],"sourcesContent":["/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2025)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CancelTokenSource } from \"axios\"\n\nimport { IFileURLs } from \"@streamlit/protobuf\"\n\nexport interface UploadingStatus {\n  type: \"uploading\"\n  cancelToken: CancelTokenSource\n  progress: number\n}\n\nexport interface UploadedStatus {\n  type: \"uploaded\"\n  fileId: string\n  fileUrls: IFileURLs\n}\n\nexport interface ErrorStatus {\n  type: \"error\"\n  errorMessage: string\n}\n\n/** The various statuses that an UploadedFileInfo can have. */\nexport type FileStatus = UploadingStatus | UploadedStatus | ErrorStatus\n\n/**\n * Wraps a File object with additional data used by FileUploader.\n * This class is immutable because it's used in within FileUploader.state.\n */\nexport class UploadFileInfo {\n  public readonly name: string\n\n  public readonly size: number\n\n  public readonly status: FileStatus\n\n  /**\n   * ID used to refer to the file locally, for update operations.\n   * If the file is uploaded, it will also have a serverID, which is\n   * used to refer to the file on the server.\n   */\n  public readonly id: number\n\n  /**\n   * Create a clone of this UploadFileInfo with the given status.\n   */\n  public setStatus(status: FileStatus): UploadFileInfo {\n    return new UploadFileInfo(this.name, this.size, this.id, status)\n  }\n\n  public constructor(\n    name: string,\n    size: number,\n    id: number,\n    status: FileStatus\n  ) {\n    this.name = name\n    this.size = size\n    this.id = id\n    this.status = status\n  }\n}\n"],"names":["UploadFileInfo","setStatus","status","name","size","id","constructor"],"mappings":"AA4CO,MAAMA,EAAe;AAAA;AAAA;AAAA;AAAA,EAiBnBC,UAAUC,GAAoC;AACnD,WAAO,IAAIF,EAAe,KAAKG,MAAM,KAAKC,MAAM,KAAKC,IAAIH,CAAM;AAAA,EACjE;AAAA,EAEOI,YACLH,GACAC,GACAC,GACAH,GACA;AACA,SAAKC,OAAOA,GACZ,KAAKC,OAAOA,GACZ,KAAKC,KAAKA,GACV,KAAKH,SAASA;AAAAA,EAChB;AACF;"}